var $fpZC2$jssha = require("jssha");


function $parcel$exportWildcard(dest, source) {
  Object.keys(source).forEach(function(key) {
    if (key === 'default' || key === '__esModule' || Object.prototype.hasOwnProperty.call(dest, key)) {
      return;
    }

    Object.defineProperty(dest, key, {
      enumerable: true,
      get: function get() {
        return source[key];
      }
    });
  });

  return dest;
}

function $parcel$export(e, n, v, s) {
  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});
}

function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}
var $dedcfd393dea00ca$exports = {};
/**
 * Do not reorder the exports in this file.
 * It is ordered this way to prevent circular dependencies.
 * If modified, save without organizing imports to prevent breaking the order.
 */ var $6c617017d170275f$exports = {};

$parcel$export($6c617017d170275f$exports, "Field", () => $6c617017d170275f$export$a455218a85c89869);
class $6c617017d170275f$export$a455218a85c89869 {
}


var $dde8a229c2cb8a5c$exports = {};

$parcel$export($dde8a229c2cb8a5c$exports, "FieldExt", () => $dde8a229c2cb8a5c$export$d11d456c2f7a68f6);

class $dde8a229c2cb8a5c$export$d11d456c2f7a68f6 extends (0, $6c617017d170275f$export$a455218a85c89869) {
    Q;
    elements;
    basefield;
    constructor(Q, elements){
        super();
        this.Q = Q;
        this.elements = elements;
        this.basefield = elements[0];
    }
    constructWithRoot(Q, elements) {
        return this.construct(Q, elements).withRoot(this.root);
    }
    withRoot(root) {
        this.root = root;
        return this;
    }
    fromBytes(Q, bytes) {
        const length = this.extension * 48;
        if (bytes.length !== length) throw new RangeError(`Expected ${length} bytes.`);
        const embeddedSize = 48 * (this.extension / this.elements.length);
        const elements = [];
        for(let i = 0; i < this.elements.length; i++)elements.push(bytes.slice(i * embeddedSize, (i + 1) * embeddedSize));
        return new this.constructor(Q, ...elements.reverse().map((bytes)=>this.basefield.fromBytes(Q, bytes)));
    }
    fromHex(Q, hex) {
        return this.fromBytes(Q, (0, $11b8831ba7e63616$export$1a8ceedbd5845648)(hex));
    }
    fromFq(Q, fq) {
        const y = this.basefield.fromFq(Q, fq);
        const z = this.basefield.zero(Q);
        const elements = [];
        for(let i = 0; i < this.elements.length; i++)elements.push(i === 0 ? y : z);
        const result = this.construct(Q, elements);
        if (this instanceof (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)) result.root = new (0, $61122e18a0bc5a58$export$312db8bf004879ae)(Q, -1n);
        else if (this instanceof (0, $f9eca204c73b879f$export$4b83d0846fa6fe37)) result.root = new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)(Q, (0, $61122e18a0bc5a58$export$312db8bf004879ae).nil.one(Q), (0, $61122e18a0bc5a58$export$312db8bf004879ae).nil.one(Q));
        else if (this instanceof (0, $e01fe8766586be5e$export$d12e5c25403eca16)) result.root = new (0, $f9eca204c73b879f$export$4b83d0846fa6fe37)(Q, (0, $ee4c81c840b9d78d$export$3250f1bd1b840331).nil.zero(Q), (0, $ee4c81c840b9d78d$export$3250f1bd1b840331).nil.one(Q), (0, $ee4c81c840b9d78d$export$3250f1bd1b840331).nil.zero(Q));
        return result;
    }
    zero(Q) {
        return this.fromFq(Q, new (0, $61122e18a0bc5a58$export$312db8bf004879ae)(Q, 0n));
    }
    one(Q) {
        return this.fromFq(Q, new (0, $61122e18a0bc5a58$export$312db8bf004879ae)(Q, 1n));
    }
    clone() {
        return this.constructWithRoot(this.Q, this.elements.map((element)=>element.clone()));
    }
    toBytes() {
        const bytes = [];
        for(let i = this.elements.length - 1; i >= 0; i--)bytes.push(...this.elements[i].toBytes());
        return Uint8Array.from(bytes);
    }
    toBool() {
        return this.elements.findIndex((element)=>!element.toBool()) === -1;
    }
    toHex() {
        return (0, $11b8831ba7e63616$export$7ea66e3774a60b67)(this.toBytes());
    }
    toString() {
        return `Fq${this.extension}(${this.elements.join(", ")})`;
    }
    negate() {
        return this.constructWithRoot(this.Q, this.elements.map((element)=>element.negate()));
    }
    qiPower(i) {
        if (this.Q != (0, $00e9cfcde39d0b4a$export$9e5f44173e64f162)) throw new (0, $652b9d23a743e8c2$export$b279dc3e096c808b)("Invalid Q in qiPower.");
        i = (0, $013cd1e91a5ae572$export$64b58c5b0372ae95)(i, this.extension);
        if (i === 0) return this;
        return this.constructWithRoot(this.Q, this.elements.map((element, index)=>index === 0 ? element.qiPower(i) : element.qiPower(i).multiply((0, $3dc2627f1a74b978$export$3fa013b223651431)(this.extension, i, index))));
    }
    pow(exponent) {
        (0, $8d5e30fd5fa02b49$export$a7a9523472993e97)(exponent >= 0n);
        let result = this.one(this.Q).withRoot(this.root);
        let base = this;
        while(exponent != 0n){
            if (exponent & 1n) result = result.multiply(base);
            base = base.multiply(base);
            exponent >>= 1n;
        }
        return result;
    }
    addTo(value) {
        let elements;
        if (value instanceof $dde8a229c2cb8a5c$export$d11d456c2f7a68f6 && value instanceof this.constructor) elements = value.elements;
        else {
            if (typeof value !== "bigint" && value.extension > this.extension) throw new (0, $652b9d23a743e8c2$export$b279dc3e096c808b)("Operand must be higher than extension.");
            elements = this.elements.map(()=>this.basefield.zero(this.Q));
            elements[0] = elements[0].add(value);
        }
        return this.constructWithRoot(this.Q, this.elements.map((element, i)=>element.add(elements[i])));
    }
    multiplyWith(value) {
        if (typeof value === "bigint") return this.constructWithRoot(this.Q, this.elements.map((element)=>element.multiply(value)));
        else if (this.extension < value.extension) throw new (0, $652b9d23a743e8c2$export$b279dc3e096c808b)("Extension must be lower than operand.");
        const elements = this.elements.map(()=>this.basefield.zero(this.Q));
        for (const [i, x] of this.elements.entries()){
            if (value instanceof $dde8a229c2cb8a5c$export$d11d456c2f7a68f6 && value.extension === this.extension) {
                for (const [j, y] of value.elements.entries())if (x.toBool() && y.toBool()) {
                    const index = (0, $013cd1e91a5ae572$export$64b58c5b0372ae95)(i + j, this.elements.length);
                    if (i + j >= this.elements.length) elements[index] = elements[index].add(x.multiply(y).multiply(this.root));
                    else elements[index] = elements[index].add(x.multiply(y));
                }
            } else if (x.toBool()) elements[i] = x.multiply(value);
        }
        return this.constructWithRoot(this.Q, elements);
    }
    subtract(value) {
        return this.add(typeof value === "bigint" ? -value : value.negate());
    }
    divide(value) {
        return this.multiply(typeof value === "bigint" ? ~value : value.inverse());
    }
    equalTo(value) {
        if (!(value instanceof $dde8a229c2cb8a5c$export$d11d456c2f7a68f6 && value instanceof this.constructor)) {
            if (typeof value === "bigint" || value instanceof $dde8a229c2cb8a5c$export$d11d456c2f7a68f6 && this.extension > value.extension) {
                for(let i = 1; i < this.elements.length; i++){
                    if (!this.elements[i].equals(this.root.zero(this.Q))) return false;
                }
                return this.elements[0].equals(value);
            }
            throw new (0, $652b9d23a743e8c2$export$b279dc3e096c808b)("Invalid operand.");
        } else return this.elements.findIndex((element, i)=>!element.equals(value.elements[i])) === -1 && this.Q === value.Q;
    }
    lt(value) {
        for(let i = this.elements.length - 1; i >= 0; i--){
            const a = this.elements[i];
            const b = value.elements[i];
            if (a.lt(b)) return true;
            else if (a.gt(b)) return false;
        }
        return false;
    }
    gt(value) {
        for(let i = this.elements.length - 1; i >= 0; i--){
            const a = this.elements[i];
            const b = value.elements[i];
            if (a.gt(b)) return true;
            else if (a.lt(b)) return false;
        }
        return false;
    }
    lteq(value) {
        return this.lt(value) || this.equals(value);
    }
    gteq(value) {
        return this.gt(value) || this.equals(value);
    }
    add(value) {
        try {
            return this.addTo(value);
        } catch (error) {
            if (!(error instanceof (0, $652b9d23a743e8c2$export$b279dc3e096c808b)) || typeof value === "bigint") throw error;
            return value.addTo(this);
        }
    }
    multiply(value) {
        try {
            return this.multiplyWith(value);
        } catch (error) {
            if (!(error instanceof (0, $652b9d23a743e8c2$export$b279dc3e096c808b)) || typeof value === "bigint") throw error;
            return value.multiplyWith(this);
        }
    }
    equals(value) {
        try {
            return this.equalTo(value);
        } catch (error) {
            if (!(error instanceof (0, $652b9d23a743e8c2$export$b279dc3e096c808b))) throw error;
            return typeof value === "bigint" ? false : value.equalTo(this);
        }
    }
}


var $61122e18a0bc5a58$exports = {};

$parcel$export($61122e18a0bc5a58$exports, "Fq", () => $61122e18a0bc5a58$export$312db8bf004879ae);

class $61122e18a0bc5a58$export$312db8bf004879ae extends (0, $6c617017d170275f$export$a455218a85c89869) {
    Q;
    static nil = new $61122e18a0bc5a58$export$312db8bf004879ae(1n, 0n);
    extension;
    value;
    constructor(Q, value){
        super();
        this.Q = Q;
        this.extension = 1;
        this.value = (0, $013cd1e91a5ae572$export$842a2cf37af977e1)(value, Q);
    }
    fromBytes(Q, bytes) {
        if (bytes.length !== 48) throw new RangeError("Expected 48 bytes.");
        return new $61122e18a0bc5a58$export$312db8bf004879ae(Q, (0, $11b8831ba7e63616$export$2a52511e4f35930a)(bytes, "big"));
    }
    fromHex(Q, hex) {
        return $61122e18a0bc5a58$export$312db8bf004879ae.nil.fromBytes(Q, (0, $11b8831ba7e63616$export$1a8ceedbd5845648)(hex));
    }
    fromFq(_Q, fq) {
        return fq;
    }
    zero(Q) {
        return new $61122e18a0bc5a58$export$312db8bf004879ae(Q, 0n);
    }
    one(Q) {
        return new $61122e18a0bc5a58$export$312db8bf004879ae(Q, 1n);
    }
    clone() {
        return new $61122e18a0bc5a58$export$312db8bf004879ae(this.Q, this.value);
    }
    toBytes() {
        return (0, $11b8831ba7e63616$export$c0f6630717bc20c7)(this.value, 48, "big");
    }
    toBool() {
        return true;
    }
    toHex() {
        return (0, $11b8831ba7e63616$export$7ea66e3774a60b67)(this.toBytes());
    }
    toString() {
        const hex = this.value.toString(16);
        return `Fq(0x${hex.length > 10 ? `${hex.slice(0, 5)}..${hex.slice(hex.length - 5)}` : hex})`;
    }
    negate() {
        return new $61122e18a0bc5a58$export$312db8bf004879ae(this.Q, -this.value);
    }
    inverse() {
        let x0 = 1n, x1 = 0n, y0 = 0n, y1 = 1n;
        let a = this.Q;
        let b = this.value;
        while(a != 0n){
            const q = b / a;
            const tempB = b;
            b = a;
            a = (0, $013cd1e91a5ae572$export$842a2cf37af977e1)(tempB, a);
            const temp_x0 = x0;
            x0 = x1;
            x1 = temp_x0 - q * x1;
            const temp_y0 = y0;
            y0 = y1;
            y1 = temp_y0 - q * y1;
        }
        return new $61122e18a0bc5a58$export$312db8bf004879ae(this.Q, x0);
    }
    qiPower(_i) {
        return this;
    }
    pow(exponent) {
        return exponent === 0n ? new $61122e18a0bc5a58$export$312db8bf004879ae(this.Q, 1n) : exponent === 1n ? new $61122e18a0bc5a58$export$312db8bf004879ae(this.Q, this.value) : (0, $013cd1e91a5ae572$export$842a2cf37af977e1)(exponent, 2n) === 0n ? new $61122e18a0bc5a58$export$312db8bf004879ae(this.Q, this.value * this.value).pow(exponent / 2n) : new $61122e18a0bc5a58$export$312db8bf004879ae(this.Q, this.value * this.value).pow(exponent / 2n).multiply(this);
    }
    addTo(value) {
        if (typeof value === "bigint") return new $61122e18a0bc5a58$export$312db8bf004879ae(this.Q, this.value + value);
        else if (value instanceof $61122e18a0bc5a58$export$312db8bf004879ae) return new $61122e18a0bc5a58$export$312db8bf004879ae(this.Q, this.value + value.value);
        else throw new (0, $652b9d23a743e8c2$export$b279dc3e096c808b)("Can only add with Fq or bigint values.");
    }
    multiplyWith(value) {
        if (typeof value === "bigint") return new $61122e18a0bc5a58$export$312db8bf004879ae(this.Q, this.value * value);
        else if (value instanceof $61122e18a0bc5a58$export$312db8bf004879ae) return new $61122e18a0bc5a58$export$312db8bf004879ae(this.Q, this.value * value.value);
        else throw new (0, $652b9d23a743e8c2$export$b279dc3e096c808b)("Can only multiply with Fq or bigint values.");
    }
    subtract(value) {
        return this.add(typeof value === "bigint" ? -value : value.negate());
    }
    divide(value) {
        return this.multiply((typeof value === "bigint" ? new $61122e18a0bc5a58$export$312db8bf004879ae(this.Q, value) : value).inverse());
    }
    equalTo(value) {
        return value instanceof $61122e18a0bc5a58$export$312db8bf004879ae && this.value === value.value && this.Q === value.Q;
    }
    lt(value) {
        return this.value < value.value;
    }
    gt(value) {
        return this.value > value.value;
    }
    lteq(value) {
        return this.lt(value) || this.equals(value);
    }
    gteq(value) {
        return this.gt(value) || this.equals(value);
    }
    modSqrt() {
        if (this.value === 0n) return new $61122e18a0bc5a58$export$312db8bf004879ae(this.Q, 0n);
        else if ((0, $013cd1e91a5ae572$export$9747a4fa913461f)(this.value, (this.Q - 1n) / 2n, this.Q) != 1n) throw new Error("No sqrt exists.");
        else if ((0, $013cd1e91a5ae572$export$842a2cf37af977e1)(this.Q, 4n) === 3n) return new $61122e18a0bc5a58$export$312db8bf004879ae(this.Q, (0, $013cd1e91a5ae572$export$9747a4fa913461f)(this.value, (this.Q + 1n) / 4n, this.Q));
        else if ((0, $013cd1e91a5ae572$export$842a2cf37af977e1)(this.Q, 8n) === 5n) return new $61122e18a0bc5a58$export$312db8bf004879ae(this.Q, (0, $013cd1e91a5ae572$export$9747a4fa913461f)(this.value, (this.Q + 3n) / 8n, this.Q));
        let S = 0n;
        let q = this.Q - 1n;
        while((0, $013cd1e91a5ae572$export$842a2cf37af977e1)(q, 2n) === 0n){
            q /= 2n;
            S++;
        }
        let z = 0n;
        for(let i = 0n; i < this.Q; i += 1n){
            const euler = (0, $013cd1e91a5ae572$export$9747a4fa913461f)(i, (this.Q - 1n) / 2n, this.Q);
            if (euler === (0, $013cd1e91a5ae572$export$842a2cf37af977e1)(-1n, this.Q)) {
                z = i;
                break;
            }
        }
        let M = S;
        let c = (0, $013cd1e91a5ae572$export$9747a4fa913461f)(z, q, this.Q);
        let t = (0, $013cd1e91a5ae572$export$9747a4fa913461f)(this.value, q, this.Q);
        let R = (0, $013cd1e91a5ae572$export$9747a4fa913461f)(this.value, (q + 1n) / 2n, this.Q);
        while(true){
            if (t === 0n) return new $61122e18a0bc5a58$export$312db8bf004879ae(this.Q, 0n);
            else if (t === 1n) return new $61122e18a0bc5a58$export$312db8bf004879ae(this.Q, R);
            let i = 0n;
            let f = t;
            while(f != 1n){
                f = (0, $013cd1e91a5ae572$export$842a2cf37af977e1)(f ** 2n, this.Q);
                i++;
            }
            const b = (0, $013cd1e91a5ae572$export$9747a4fa913461f)(c, (0, $013cd1e91a5ae572$export$9747a4fa913461f)(2n, M - i - 1n, this.Q), this.Q);
            M = i;
            c = (0, $013cd1e91a5ae572$export$842a2cf37af977e1)(b ** 2n, this.Q);
            t = (0, $013cd1e91a5ae572$export$842a2cf37af977e1)(t * c, this.Q);
            R = (0, $013cd1e91a5ae572$export$842a2cf37af977e1)(R * b, this.Q);
        }
    }
    add(value) {
        try {
            return this.addTo(value);
        } catch (error) {
            if (!(error instanceof (0, $652b9d23a743e8c2$export$b279dc3e096c808b)) || typeof value === "bigint") throw error;
            return value.addTo(this);
        }
    }
    multiply(value) {
        try {
            return this.multiplyWith(value);
        } catch (error) {
            if (!(error instanceof (0, $652b9d23a743e8c2$export$b279dc3e096c808b)) || typeof value === "bigint") throw error;
            return value.multiplyWith(this);
        }
    }
    equals(value) {
        try {
            return this.equalTo(value);
        } catch (error) {
            if (!(error instanceof (0, $652b9d23a743e8c2$export$b279dc3e096c808b))) throw error;
            return typeof value === "bigint" ? false : value.equalTo(this);
        }
    }
}


var $ee4c81c840b9d78d$exports = {};

$parcel$export($ee4c81c840b9d78d$exports, "Fq2", () => $ee4c81c840b9d78d$export$3250f1bd1b840331);

class $ee4c81c840b9d78d$export$3250f1bd1b840331 extends (0, $dde8a229c2cb8a5c$export$d11d456c2f7a68f6) {
    static nil = new $ee4c81c840b9d78d$export$3250f1bd1b840331(1n, (0, $61122e18a0bc5a58$export$312db8bf004879ae).nil, (0, $61122e18a0bc5a58$export$312db8bf004879ae).nil);
    extension = 2;
    root;
    constructor(Q, x, y){
        super(Q, [
            x,
            y
        ]);
        this.root = new (0, $61122e18a0bc5a58$export$312db8bf004879ae)(Q, -1n);
    }
    construct(Q, elements) {
        return new $ee4c81c840b9d78d$export$3250f1bd1b840331(Q, elements[0], elements[1]);
    }
    inverse() {
        const [a, b] = this.elements;
        const factor = a.multiply(a).add(b.multiply(b)).inverse();
        return new $ee4c81c840b9d78d$export$3250f1bd1b840331(this.Q, a.multiply(factor), b.negate().multiply(factor));
    }
    mulByNonResidue() {
        const [a, b] = this.elements;
        return new $ee4c81c840b9d78d$export$3250f1bd1b840331(this.Q, a.subtract(b), a.add(b));
    }
    modSqrt() {
        const [a0, a1] = this.elements;
        if (a1.equals(this.basefield.one(this.Q))) return this.fromFq(this.Q, a0.modSqrt());
        let alpha = a0.pow(2n).add(a1.pow(2n));
        let gamma = alpha.pow((this.Q - 1n) / 2n);
        if (new (0, $61122e18a0bc5a58$export$312db8bf004879ae)(this.Q, -1n).equals(gamma)) throw new Error("No sqrt exists.");
        alpha = alpha.modSqrt();
        let delta = a0.add(alpha).multiply(new (0, $61122e18a0bc5a58$export$312db8bf004879ae)(this.Q, 2n).inverse());
        gamma = delta.pow((this.Q - 1n) / 2n);
        if (gamma.equals(new (0, $61122e18a0bc5a58$export$312db8bf004879ae)(this.Q, -1n))) delta = a0.subtract(alpha).multiply(new (0, $61122e18a0bc5a58$export$312db8bf004879ae)(this.Q, 2n).inverse());
        const x0 = delta.modSqrt();
        const x1 = a1.multiply(new (0, $61122e18a0bc5a58$export$312db8bf004879ae)(this.Q, 2n).multiply(x0).inverse());
        return new $ee4c81c840b9d78d$export$3250f1bd1b840331(this.Q, x0, x1);
    }
}


var $f9eca204c73b879f$exports = {};

$parcel$export($f9eca204c73b879f$exports, "Fq6", () => $f9eca204c73b879f$export$4b83d0846fa6fe37);

class $f9eca204c73b879f$export$4b83d0846fa6fe37 extends (0, $dde8a229c2cb8a5c$export$d11d456c2f7a68f6) {
    static nil = new $f9eca204c73b879f$export$4b83d0846fa6fe37(1n, (0, $ee4c81c840b9d78d$export$3250f1bd1b840331).nil, (0, $ee4c81c840b9d78d$export$3250f1bd1b840331).nil, (0, $ee4c81c840b9d78d$export$3250f1bd1b840331).nil);
    extension = 6;
    root;
    constructor(Q, x, y, z){
        super(Q, [
            x,
            y,
            z
        ]);
        this.root = new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)(Q, (0, $61122e18a0bc5a58$export$312db8bf004879ae).nil.one(Q), (0, $61122e18a0bc5a58$export$312db8bf004879ae).nil.one(Q));
    }
    construct(Q, elements) {
        return new $f9eca204c73b879f$export$4b83d0846fa6fe37(Q, elements[0], elements[1], elements[2]);
    }
    inverse() {
        const [a, b, c] = this.elements;
        const g0 = a.multiply(a).subtract(b.multiply(c.mulByNonResidue()));
        const g1 = c.multiply(c).mulByNonResidue().subtract(a.multiply(b));
        const g2 = b.multiply(b).subtract(a.multiply(c));
        const factor = g0.multiply(a).add(g1.multiply(c).add(g2.multiply(b)).mulByNonResidue()).inverse();
        return new $f9eca204c73b879f$export$4b83d0846fa6fe37(this.Q, g0.multiply(factor), g1.multiply(factor), g2.multiply(factor));
    }
    mulByNonResidue() {
        const [a, b, c] = this.elements;
        return new $f9eca204c73b879f$export$4b83d0846fa6fe37(this.Q, c.multiply(this.root), a, b);
    }
}


var $e01fe8766586be5e$exports = {};

$parcel$export($e01fe8766586be5e$exports, "Fq12", () => $e01fe8766586be5e$export$d12e5c25403eca16);

class $e01fe8766586be5e$export$d12e5c25403eca16 extends (0, $dde8a229c2cb8a5c$export$d11d456c2f7a68f6) {
    static nil = new $e01fe8766586be5e$export$d12e5c25403eca16(1n, (0, $f9eca204c73b879f$export$4b83d0846fa6fe37).nil, (0, $f9eca204c73b879f$export$4b83d0846fa6fe37).nil);
    extension = 12;
    root;
    constructor(Q, x, y){
        super(Q, [
            x,
            y
        ]);
        this.root = new (0, $f9eca204c73b879f$export$4b83d0846fa6fe37)(Q, (0, $ee4c81c840b9d78d$export$3250f1bd1b840331).nil.zero(Q), (0, $ee4c81c840b9d78d$export$3250f1bd1b840331).nil.one(Q), (0, $ee4c81c840b9d78d$export$3250f1bd1b840331).nil.zero(Q));
    }
    construct(Q, elements) {
        return new $e01fe8766586be5e$export$d12e5c25403eca16(Q, elements[0], elements[1]);
    }
    inverse() {
        const [a, b] = this.elements;
        const factor = a.multiply(a).subtract(b.multiply(b).mulByNonResidue()).inverse();
        return new $e01fe8766586be5e$export$d12e5c25403eca16(this.Q, a.multiply(factor), b.negate().multiply(factor));
    }
}


var $00e9cfcde39d0b4a$exports = {};

$parcel$export($00e9cfcde39d0b4a$exports, "x", () => $00e9cfcde39d0b4a$export$d141bba7fdc215a3);
$parcel$export($00e9cfcde39d0b4a$exports, "q", () => $00e9cfcde39d0b4a$export$9e5f44173e64f162);
$parcel$export($00e9cfcde39d0b4a$exports, "a", () => $00e9cfcde39d0b4a$export$407448d2b89b1813);
$parcel$export($00e9cfcde39d0b4a$exports, "b", () => $00e9cfcde39d0b4a$export$8b22cf2602fb60ce);
$parcel$export($00e9cfcde39d0b4a$exports, "aTwist", () => $00e9cfcde39d0b4a$export$371e57e0e902051d);
$parcel$export($00e9cfcde39d0b4a$exports, "bTwist", () => $00e9cfcde39d0b4a$export$a1902a2bd2e92b96);
$parcel$export($00e9cfcde39d0b4a$exports, "gx", () => $00e9cfcde39d0b4a$export$881ce897a4237459);
$parcel$export($00e9cfcde39d0b4a$exports, "gy", () => $00e9cfcde39d0b4a$export$5056eb87f1daa9b4);
$parcel$export($00e9cfcde39d0b4a$exports, "g2x", () => $00e9cfcde39d0b4a$export$2cdfd364bfc1179f);
$parcel$export($00e9cfcde39d0b4a$exports, "g2y", () => $00e9cfcde39d0b4a$export$85e678c171039b5a);
$parcel$export($00e9cfcde39d0b4a$exports, "n", () => $00e9cfcde39d0b4a$export$7ccc53e8f1e7dfc5);
$parcel$export($00e9cfcde39d0b4a$exports, "h", () => $00e9cfcde39d0b4a$export$dda1d9f60106f0e9);
$parcel$export($00e9cfcde39d0b4a$exports, "hEff", () => $00e9cfcde39d0b4a$export$41b7b4fef7f76fa9);
$parcel$export($00e9cfcde39d0b4a$exports, "k", () => $00e9cfcde39d0b4a$export$342063e11d6c3cad);
$parcel$export($00e9cfcde39d0b4a$exports, "sqrtN3", () => $00e9cfcde39d0b4a$export$985f9eea851ca5f9);
$parcel$export($00e9cfcde39d0b4a$exports, "sqrtN3m1o2", () => $00e9cfcde39d0b4a$export$3d2b20680da13ad6);
$parcel$export($00e9cfcde39d0b4a$exports, "defaultEc", () => $00e9cfcde39d0b4a$export$df72980aaa0ca402);
$parcel$export($00e9cfcde39d0b4a$exports, "defaultEcTwist", () => $00e9cfcde39d0b4a$export$89bff894721071da);

const $00e9cfcde39d0b4a$export$d141bba7fdc215a3 = -0xd201000000010000n;
const $00e9cfcde39d0b4a$export$9e5f44173e64f162 = 0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;
const $00e9cfcde39d0b4a$export$407448d2b89b1813 = new (0, $61122e18a0bc5a58$export$312db8bf004879ae)($00e9cfcde39d0b4a$export$9e5f44173e64f162, 0n);
const $00e9cfcde39d0b4a$export$8b22cf2602fb60ce = new (0, $61122e18a0bc5a58$export$312db8bf004879ae)($00e9cfcde39d0b4a$export$9e5f44173e64f162, 4n);
const $00e9cfcde39d0b4a$export$371e57e0e902051d = new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)($00e9cfcde39d0b4a$export$9e5f44173e64f162, new (0, $61122e18a0bc5a58$export$312db8bf004879ae)($00e9cfcde39d0b4a$export$9e5f44173e64f162, 0n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)($00e9cfcde39d0b4a$export$9e5f44173e64f162, 0n));
const $00e9cfcde39d0b4a$export$a1902a2bd2e92b96 = new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)($00e9cfcde39d0b4a$export$9e5f44173e64f162, new (0, $61122e18a0bc5a58$export$312db8bf004879ae)($00e9cfcde39d0b4a$export$9e5f44173e64f162, 4n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)($00e9cfcde39d0b4a$export$9e5f44173e64f162, 4n));
const $00e9cfcde39d0b4a$export$881ce897a4237459 = new (0, $61122e18a0bc5a58$export$312db8bf004879ae)($00e9cfcde39d0b4a$export$9e5f44173e64f162, 0x17f1d3a73197d7942695638c4fa9ac0fc3688c4f9774b905a14e3a3f171bac586c55e83ff97a1aeffb3af00adb22c6bbn);
const $00e9cfcde39d0b4a$export$5056eb87f1daa9b4 = new (0, $61122e18a0bc5a58$export$312db8bf004879ae)($00e9cfcde39d0b4a$export$9e5f44173e64f162, 0x08b3f481e3aaa0f1a09e30ed741d8ae4fcf5e095d5d00af600db18cb2c04b3edd03cc744a2888ae40caa232946c5e7e1n);
const $00e9cfcde39d0b4a$export$2cdfd364bfc1179f = new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)($00e9cfcde39d0b4a$export$9e5f44173e64f162, new (0, $61122e18a0bc5a58$export$312db8bf004879ae)($00e9cfcde39d0b4a$export$9e5f44173e64f162, 352701069587466618187139116011060144890029952792775240219908644239793785735715026873347600343865175952761926303160n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)($00e9cfcde39d0b4a$export$9e5f44173e64f162, 3059144344244213709971259814753781636986470325476647558659373206291635324768958432433509563104347017837885763365758n));
const $00e9cfcde39d0b4a$export$85e678c171039b5a = new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)($00e9cfcde39d0b4a$export$9e5f44173e64f162, new (0, $61122e18a0bc5a58$export$312db8bf004879ae)($00e9cfcde39d0b4a$export$9e5f44173e64f162, 1985150602287291935568054521177171638300868978215655730859378665066344726373823718423869104263333984641494340347905n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)($00e9cfcde39d0b4a$export$9e5f44173e64f162, 927553665492332455747201965776037880757740193453592970025027978793976877002675564980949289727957565575433344219582n));
const $00e9cfcde39d0b4a$export$7ccc53e8f1e7dfc5 = 0x73eda753299d7d483339d80809a1d80553bda402fffe5bfeffffffff00000001n;
const $00e9cfcde39d0b4a$export$dda1d9f60106f0e9 = 0x396c8c005555e1568c00aaab0000aaabn;
const $00e9cfcde39d0b4a$export$41b7b4fef7f76fa9 = 0xbc69f08f2ee75b3584c6a0ea91b352888e2a8e9145ad7689986ff031508ffe1329c2f178731db956d82bf015d1212b02ec0ec69d7477c1ae954cbc06689f6a359894c0adebbf6b4e8020005aaa95551n;
const $00e9cfcde39d0b4a$export$342063e11d6c3cad = 12n;
const $00e9cfcde39d0b4a$export$985f9eea851ca5f9 = 1586958781458431025242759403266842894121773480562120986020912974854563298150952611241517463240701n;
const $00e9cfcde39d0b4a$export$3d2b20680da13ad6 = 793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350n;
const $00e9cfcde39d0b4a$export$df72980aaa0ca402 = {
    q: $00e9cfcde39d0b4a$export$9e5f44173e64f162,
    a: $00e9cfcde39d0b4a$export$407448d2b89b1813,
    b: $00e9cfcde39d0b4a$export$8b22cf2602fb60ce,
    gx: $00e9cfcde39d0b4a$export$881ce897a4237459,
    gy: $00e9cfcde39d0b4a$export$5056eb87f1daa9b4,
    g2x: $00e9cfcde39d0b4a$export$2cdfd364bfc1179f,
    g2y: $00e9cfcde39d0b4a$export$85e678c171039b5a,
    n: $00e9cfcde39d0b4a$export$7ccc53e8f1e7dfc5,
    h: $00e9cfcde39d0b4a$export$dda1d9f60106f0e9,
    x: $00e9cfcde39d0b4a$export$d141bba7fdc215a3,
    k: $00e9cfcde39d0b4a$export$342063e11d6c3cad,
    sqrtN3: $00e9cfcde39d0b4a$export$985f9eea851ca5f9,
    sqrtN3m1o2: $00e9cfcde39d0b4a$export$3d2b20680da13ad6
};
const $00e9cfcde39d0b4a$export$89bff894721071da = {
    q: $00e9cfcde39d0b4a$export$9e5f44173e64f162,
    a: $00e9cfcde39d0b4a$export$371e57e0e902051d,
    b: $00e9cfcde39d0b4a$export$a1902a2bd2e92b96,
    gx: $00e9cfcde39d0b4a$export$881ce897a4237459,
    gy: $00e9cfcde39d0b4a$export$5056eb87f1daa9b4,
    g2x: $00e9cfcde39d0b4a$export$2cdfd364bfc1179f,
    g2y: $00e9cfcde39d0b4a$export$85e678c171039b5a,
    n: $00e9cfcde39d0b4a$export$7ccc53e8f1e7dfc5,
    h: $00e9cfcde39d0b4a$export$41b7b4fef7f76fa9,
    x: $00e9cfcde39d0b4a$export$d141bba7fdc215a3,
    k: $00e9cfcde39d0b4a$export$342063e11d6c3cad,
    sqrtN3: $00e9cfcde39d0b4a$export$985f9eea851ca5f9,
    sqrtN3m1o2: $00e9cfcde39d0b4a$export$3d2b20680da13ad6
};


var $3dc2627f1a74b978$exports = {};

$parcel$export($3dc2627f1a74b978$exports, "frobCoeffs", () => $3dc2627f1a74b978$export$ef36a8205544c00e);
$parcel$export($3dc2627f1a74b978$exports, "getFrobCoeff", () => $3dc2627f1a74b978$export$3fa013b223651431);

const $3dc2627f1a74b978$export$ef36a8205544c00e = {
    "2,1,1": new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), -1n),
    "6,1,1": new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x1a0111ea397fe699ec02408663d4de85aa0d857d89759ad4897d29650fb85f9b409427eb4f49fffd8bfd00000000aaacn)),
    "6,1,2": new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x1a0111ea397fe699ec02408663d4de85aa0d857d89759ad4897d29650fb85f9b409427eb4f49fffd8bfd00000000aaadn), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n)),
    "6,2,1": new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x5f19672fdf76ce51ba69c6076a0f77eaddb3a93be6f89688de17d813620a00022e01fffffffefffen), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n)),
    "6,2,2": new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x1a0111ea397fe699ec02408663d4de85aa0d857d89759ad4897d29650fb85f9b409427eb4f49fffd8bfd00000000aaacn), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n)),
    "6,3,1": new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 1n)),
    "6,3,2": new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaaan), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n)),
    "6,4,1": new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x1a0111ea397fe699ec02408663d4de85aa0d857d89759ad4897d29650fb85f9b409427eb4f49fffd8bfd00000000aaacn), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n)),
    "6,4,2": new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x5f19672fdf76ce51ba69c6076a0f77eaddb3a93be6f89688de17d813620a00022e01fffffffefffen), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n)),
    "6,5,1": new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x5f19672fdf76ce51ba69c6076a0f77eaddb3a93be6f89688de17d813620a00022e01fffffffefffen)),
    "6,5,2": new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x5f19672fdf76ce51ba69c6076a0f77eaddb3a93be6f89688de17d813620a00022e01fffffffeffffn), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n)),
    "12,1,1": new (0, $f9eca204c73b879f$export$4b83d0846fa6fe37)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x1904d3bf02bb0667c231beb4202c0d1f0fd603fd3cbd5f4f7b2443d784bab9c4f67ea53d63e7813d8d0775ed92235fb8n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0xfc3e2b36c4e03288e9e902231f9fb854a14787b6c7b36fec0c8ec971f63c5f282d5ac14d6c7ec22cf78a126ddc4af3n)), new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n)), new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n))),
    "12,2,1": new (0, $f9eca204c73b879f$export$4b83d0846fa6fe37)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x5f19672fdf76ce51ba69c6076a0f77eaddb3a93be6f89688de17d813620a00022e01fffffffeffffn), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n)), new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n)), new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n))),
    "12,3,1": new (0, $f9eca204c73b879f$export$4b83d0846fa6fe37)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x135203e60180a68ee2e9c448d77a2cd91c3dedd930b1cf60ef396489f61eb45e304466cf3e67fa0af1ee7b04121bdea2n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x6af0e0437ff400b6831e36d6bd17ffe48395dabc2d3435e77f76e17009241c5ee67992f72ec05f4c81084fbede3cc09n)), new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n)), new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n))),
    "12,4,1": new (0, $f9eca204c73b879f$export$4b83d0846fa6fe37)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x5f19672fdf76ce51ba69c6076a0f77eaddb3a93be6f89688de17d813620a00022e01fffffffefffen), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n)), new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n)), new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n))),
    "12,5,1": new (0, $f9eca204c73b879f$export$4b83d0846fa6fe37)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x144e4211384586c16bd3ad4afa99cc9170df3560e77982d0db45f3536814f0bd5871c1908bd478cd1ee605167ff82995n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x5b2cfd9013a5fd8df47fa6b48b1e045f39816240c0b8fee8beadf4d8e9c0566c63a3e6e257f87329b18fae980078116n)), new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n)), new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n))),
    "12,6,1": new (0, $f9eca204c73b879f$export$4b83d0846fa6fe37)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaaan), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n)), new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n)), new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n))),
    "12,7,1": new (0, $f9eca204c73b879f$export$4b83d0846fa6fe37)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0xfc3e2b36c4e03288e9e902231f9fb854a14787b6c7b36fec0c8ec971f63c5f282d5ac14d6c7ec22cf78a126ddc4af3n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x1904d3bf02bb0667c231beb4202c0d1f0fd603fd3cbd5f4f7b2443d784bab9c4f67ea53d63e7813d8d0775ed92235fb8n)), new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n)), new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n))),
    "12,8,1": new (0, $f9eca204c73b879f$export$4b83d0846fa6fe37)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x1a0111ea397fe699ec02408663d4de85aa0d857d89759ad4897d29650fb85f9b409427eb4f49fffd8bfd00000000aaacn), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n)), new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n)), new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n))),
    "12,9,1": new (0, $f9eca204c73b879f$export$4b83d0846fa6fe37)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x6af0e0437ff400b6831e36d6bd17ffe48395dabc2d3435e77f76e17009241c5ee67992f72ec05f4c81084fbede3cc09n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x135203e60180a68ee2e9c448d77a2cd91c3dedd930b1cf60ef396489f61eb45e304466cf3e67fa0af1ee7b04121bdea2n)), new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n)), new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n))),
    "12,10,1": new (0, $f9eca204c73b879f$export$4b83d0846fa6fe37)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x1a0111ea397fe699ec02408663d4de85aa0d857d89759ad4897d29650fb85f9b409427eb4f49fffd8bfd00000000aaadn), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n)), new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n)), new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n))),
    "12,11,1": new (0, $f9eca204c73b879f$export$4b83d0846fa6fe37)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x5b2cfd9013a5fd8df47fa6b48b1e045f39816240c0b8fee8beadf4d8e9c0566c63a3e6e257f87329b18fae980078116n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x144e4211384586c16bd3ad4afa99cc9170df3560e77982d0db45f3536814f0bd5871c1908bd478cd1ee605167ff82995n)), new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n)), new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n)))
};
function $3dc2627f1a74b978$export$3fa013b223651431(extension, i, index) {
    return $3dc2627f1a74b978$export$ef36a8205544c00e[`${extension},${i},${index}`];
}


var $1d6ac6ce37d39979$exports = {};

$parcel$export($1d6ac6ce37d39979$exports, "sha256", () => $1d6ac6ce37d39979$export$bced8d2aada2d1c9);
$parcel$export($1d6ac6ce37d39979$exports, "sha512", () => $1d6ac6ce37d39979$export$a888d2532e6dc7bb);

const $1d6ac6ce37d39979$export$bced8d2aada2d1c9 = {
    byteSize: 32,
    blockSize: 64,
    convert: (buffer)=>{
        const hash = new (0, ($parcel$interopDefault($fpZC2$jssha)))("SHA-256", "UINT8ARRAY");
        hash.update(buffer);
        return hash.getHash("UINT8ARRAY");
    }
};
const $1d6ac6ce37d39979$export$a888d2532e6dc7bb = {
    byteSize: 64,
    blockSize: 128,
    convert: (buffer)=>{
        const hash = new (0, ($parcel$interopDefault($fpZC2$jssha)))("SHA-512", "UINT8ARRAY");
        hash.update(buffer);
        return hash.getHash("UINT8ARRAY");
    }
};


var $8856e63c79a7a18e$exports = {};

$parcel$export($8856e63c79a7a18e$exports, "xnum", () => $8856e63c79a7a18e$export$4c6c1dafe316d2c);
$parcel$export($8856e63c79a7a18e$exports, "xden", () => $8856e63c79a7a18e$export$732ae2b2551ff413);
$parcel$export($8856e63c79a7a18e$exports, "ynum", () => $8856e63c79a7a18e$export$ea2765eb3fc09cbc);
$parcel$export($8856e63c79a7a18e$exports, "yden", () => $8856e63c79a7a18e$export$54826405639b5799);

const $8856e63c79a7a18e$export$4c6c1dafe316d2c = [
    new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x5c759507e8e333ebb5b7a9a47d7ed8532c52d39fd3a042a88b58423c50ae15d5c2638e343d9c71c6238aaaaaaaa97d6n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x5c759507e8e333ebb5b7a9a47d7ed8532c52d39fd3a042a88b58423c50ae15d5c2638e343d9c71c6238aaaaaaaa97d6n)),
    new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x11560bf17baa99bc32126fced787c88f984f87adf7ae0c7f9a208c6b4f20a4181472aaa9cb8d555526a9ffffffffc71an)),
    new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x11560bf17baa99bc32126fced787c88f984f87adf7ae0c7f9a208c6b4f20a4181472aaa9cb8d555526a9ffffffffc71en), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x8ab05f8bdd54cde190937e76bc3e447cc27c3d6fbd7063fcd104635a790520c0a395554e5c6aaaa9354ffffffffe38dn)),
    new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x171d6541fa38ccfaed6dea691f5fb614cb14b4e7f4e810aa22d6108f142b85757098e38d0f671c7188e2aaaaaaaa5ed1n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n))
];
const $8856e63c79a7a18e$export$732ae2b2551ff413 = [
    new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaa63n)),
    new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0xcn), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaa9fn)),
    new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 1n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n))
];
const $8856e63c79a7a18e$export$ea2765eb3fc09cbc = [
    new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x1530477c7ab4113b59a4c18b076d11930f7da5d4a07f649bf54439d87d27e500fc8c25ebf8c92f6812cfc71c71c6d706n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x1530477c7ab4113b59a4c18b076d11930f7da5d4a07f649bf54439d87d27e500fc8c25ebf8c92f6812cfc71c71c6d706n)),
    new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x5c759507e8e333ebb5b7a9a47d7ed8532c52d39fd3a042a88b58423c50ae15d5c2638e343d9c71c6238aaaaaaaa97ben)),
    new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x11560bf17baa99bc32126fced787c88f984f87adf7ae0c7f9a208c6b4f20a4181472aaa9cb8d555526a9ffffffffc71cn), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x8ab05f8bdd54cde190937e76bc3e447cc27c3d6fbd7063fcd104635a790520c0a395554e5c6aaaa9354ffffffffe38fn)),
    new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x124c9ad43b6cf79bfbf7043de3811ad0761b0f37a1e26286b0e977c69aa274524e79097a56dc4bd9e1b371c71c718b10n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n))
];
const $8856e63c79a7a18e$export$54826405639b5799 = [
    new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffa8fbn), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffa8fbn)),
    new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffa9d3n)),
    new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x12n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaa99n)),
    new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 1n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n))
];


var $7114a315a435248d$exports = {};

$parcel$export($7114a315a435248d$exports, "xi_2", () => $7114a315a435248d$export$8d1968de8a0388cb);
$parcel$export($7114a315a435248d$exports, "Ell2p_a", () => $7114a315a435248d$export$cb23cd3dd580e72c);
$parcel$export($7114a315a435248d$exports, "Ell2p_b", () => $7114a315a435248d$export$a49b3bf2a8f9ece3);
$parcel$export($7114a315a435248d$exports, "ev1", () => $7114a315a435248d$export$c278e5ed08c0671a);
$parcel$export($7114a315a435248d$exports, "ev2", () => $7114a315a435248d$export$f37125f5b41ac41c);
$parcel$export($7114a315a435248d$exports, "ev3", () => $7114a315a435248d$export$8d0285e71910f92b);
$parcel$export($7114a315a435248d$exports, "ev4", () => $7114a315a435248d$export$7fe9a0c81d3716fa);
$parcel$export($7114a315a435248d$exports, "etas", () => $7114a315a435248d$export$dfed87f2d11110f4);

const $7114a315a435248d$export$8d1968de8a0388cb = new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), -2n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), -1n));
const $7114a315a435248d$export$cb23cd3dd580e72c = new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 240n));
const $7114a315a435248d$export$a49b3bf2a8f9ece3 = new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 1012n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 1012n));
const $7114a315a435248d$export$c278e5ed08c0671a = 0x699be3b8c6870965e5bf892ad5d2cc7b0e85a117402dfd83b7f4a947e02d978498255a2aaec0ac627b5afbdf1bf1c90n;
const $7114a315a435248d$export$f37125f5b41ac41c = 0x8157cd83046453f5dd0972b6e3949e4288020b5b8a9cc99ca07e27089a2ce2436d965026adad3ef7baba37f2183e9b5n;
const $7114a315a435248d$export$8d0285e71910f92b = 0xab1c2ffdd6c253ca155231eb3e71ba044fd562f6f72bc5bad5ec46a0b7a3b0247cf08ce6c6317f40edbc653a72dee17n;
const $7114a315a435248d$export$7fe9a0c81d3716fa = 0xaa404866706722864480885d68ad0ccac1967c7544b447873cc37e0181271e006df72162a3d3e0287bf597fbf7f8fc1n;
const $7114a315a435248d$export$dfed87f2d11110f4 = [
    new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), $7114a315a435248d$export$c278e5ed08c0671a), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), $7114a315a435248d$export$f37125f5b41ac41c)),
    new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), (0, $00e9cfcde39d0b4a$export$9e5f44173e64f162) - $7114a315a435248d$export$f37125f5b41ac41c), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), $7114a315a435248d$export$c278e5ed08c0671a)),
    new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), $7114a315a435248d$export$8d0285e71910f92b), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), $7114a315a435248d$export$7fe9a0c81d3716fa)),
    new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), (0, $00e9cfcde39d0b4a$export$9e5f44173e64f162) - $7114a315a435248d$export$7fe9a0c81d3716fa), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), $7114a315a435248d$export$8d0285e71910f92b))
];


var $45c5a0c79e0736cc$exports = {};

$parcel$export($45c5a0c79e0736cc$exports, "rv1", () => $45c5a0c79e0736cc$export$cd08e5dbcdd326bb);
$parcel$export($45c5a0c79e0736cc$exports, "rootsOfUnity", () => $45c5a0c79e0736cc$export$5e60bb11dae8e64b);

const $45c5a0c79e0736cc$export$cd08e5dbcdd326bb = 0x6af0e0437ff400b6831e36d6bd17ffe48395dabc2d3435e77f76e17009241c5ee67992f72ec05f4c81084fbede3cc09n;
const $45c5a0c79e0736cc$export$5e60bb11dae8e64b = [
    new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 1n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n)),
    new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 0n), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 1n)),
    new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), $45c5a0c79e0736cc$export$cd08e5dbcdd326bb), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), $45c5a0c79e0736cc$export$cd08e5dbcdd326bb)),
    new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), $45c5a0c79e0736cc$export$cd08e5dbcdd326bb), new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), (0, $00e9cfcde39d0b4a$export$9e5f44173e64f162) - $45c5a0c79e0736cc$export$cd08e5dbcdd326bb))
];


var $5f5e7634db6ec17d$exports = {};

$parcel$export($5f5e7634db6ec17d$exports, "basicSchemeDst", () => $5f5e7634db6ec17d$export$c1bffad7aeda544b);
$parcel$export($5f5e7634db6ec17d$exports, "augSchemeDst", () => $5f5e7634db6ec17d$export$5b346028b2eb430c);
$parcel$export($5f5e7634db6ec17d$exports, "popSchemeDst", () => $5f5e7634db6ec17d$export$8d64a5ed43a5a57c);
$parcel$export($5f5e7634db6ec17d$exports, "popSchemePopDst", () => $5f5e7634db6ec17d$export$b554d748bc2a5eef);
const $5f5e7634db6ec17d$export$c1bffad7aeda544b = new TextEncoder().encode("BLS_SIG_BLS12381G2_XMD:SHA-256_SSWU_RO_NUL_");
const $5f5e7634db6ec17d$export$5b346028b2eb430c = new TextEncoder().encode("BLS_SIG_BLS12381G2_XMD:SHA-256_SSWU_RO_AUG_");
const $5f5e7634db6ec17d$export$8d64a5ed43a5a57c = new TextEncoder().encode("BLS_SIG_BLS12381G2_XMD:SHA-256_SSWU_RO_POP_");
const $5f5e7634db6ec17d$export$b554d748bc2a5eef = new TextEncoder().encode("BLS_POP_BLS12381G2_XMD:SHA-256_SSWU_RO_POP_");


var $4508fd1f2dfd87e3$exports = {};

$parcel$export($4508fd1f2dfd87e3$exports, "AffinePoint", () => $4508fd1f2dfd87e3$export$567266b06c239d21);

class $4508fd1f2dfd87e3$export$567266b06c239d21 {
    x;
    y;
    isInfinity;
    ec;
    constructor(x, y, isInfinity, ec = (0, $00e9cfcde39d0b4a$export$df72980aaa0ca402)){
        this.x = x;
        this.y = y;
        this.isInfinity = isInfinity;
        this.ec = ec;
        (0, $8d5e30fd5fa02b49$export$a7a9523472993e97)(x instanceof y.constructor);
    }
    isOnCurve() {
        return this.isInfinity || this.y.multiply(this.y).equals(this.x.multiply(this.x).multiply(this.x).add(this.ec.a.multiply(this.x)).add(this.ec.b));
    }
    toJacobian() {
        return new (0, $f81fe8e548a259fc$export$54579cb87d860a47)(this.x, this.y, this.x.one(this.ec.q), this.isInfinity, this.ec);
    }
    twist() {
        const f = (0, $e01fe8766586be5e$export$d12e5c25403eca16).nil.one(this.ec.q);
        const wsq = new (0, $e01fe8766586be5e$export$d12e5c25403eca16)(this.ec.q, f.root, (0, $f9eca204c73b879f$export$4b83d0846fa6fe37).nil.zero(this.ec.q));
        const wcu = new (0, $e01fe8766586be5e$export$d12e5c25403eca16)(this.ec.q, (0, $f9eca204c73b879f$export$4b83d0846fa6fe37).nil.zero(this.ec.q), f.root);
        return new $4508fd1f2dfd87e3$export$567266b06c239d21(this.x.multiply(wsq), this.y.multiply(wcu), false, this.ec);
    }
    untwist() {
        const f = (0, $e01fe8766586be5e$export$d12e5c25403eca16).nil.one(this.ec.q);
        const wsq = new (0, $e01fe8766586be5e$export$d12e5c25403eca16)(this.ec.q, f.root, (0, $f9eca204c73b879f$export$4b83d0846fa6fe37).nil.zero(this.ec.q));
        const wcu = new (0, $e01fe8766586be5e$export$d12e5c25403eca16)(this.ec.q, (0, $f9eca204c73b879f$export$4b83d0846fa6fe37).nil.zero(this.ec.q), f.root);
        return new $4508fd1f2dfd87e3$export$567266b06c239d21(this.x.divide(wsq), this.y.divide(wcu), false, this.ec);
    }
    double() {
        const left = this.x.multiply(this.x).multiply(new (0, $61122e18a0bc5a58$export$312db8bf004879ae)(this.ec.q, 3n)).add(this.ec.a);
        const s = left.divide(this.y.multiply(new (0, $61122e18a0bc5a58$export$312db8bf004879ae)(this.ec.q, 2n)));
        const newX = s.multiply(s).subtract(this.x).subtract(this.x);
        const newY = s.multiply(this.x.subtract(newX)).subtract(this.y);
        return new $4508fd1f2dfd87e3$export$567266b06c239d21(newX, newY, false, this.ec);
    }
    add(value) {
        (0, $8d5e30fd5fa02b49$export$a7a9523472993e97)(this.isOnCurve());
        (0, $8d5e30fd5fa02b49$export$a7a9523472993e97)(value.isOnCurve());
        if (this.isInfinity) return value;
        else if (value.isInfinity) return this;
        else if (this.equals(value)) return this.double();
        const s = value.y.subtract(this.y).divide(value.x.subtract(this.x));
        const newX = s.multiply(s).subtract(this.x).subtract(value.x);
        const newY = s.multiply(this.x.subtract(newX)).subtract(this.y);
        return new $4508fd1f2dfd87e3$export$567266b06c239d21(newX, newY, false, this.ec);
    }
    subtract(value) {
        return this.add(value.negate());
    }
    multiply(value) {
        return (0, $27314bc03f74868b$export$6fc8005fc3e0ffe8)(value, this.toJacobian(), this.ec).toAffine();
    }
    negate() {
        return new $4508fd1f2dfd87e3$export$567266b06c239d21(this.x, this.y.negate(), this.isInfinity, this.ec);
    }
    equals(value) {
        return this.x.equals(value.x) && this.y.equals(value.y) && this.isInfinity === value.isInfinity;
    }
    clone() {
        return new $4508fd1f2dfd87e3$export$567266b06c239d21(this.x.clone(), this.y.clone(), this.isInfinity, this.ec);
    }
    toString() {
        return `AffinePoint(x=${this.x}, y=${this.y}, i=${this.isInfinity})`;
    }
}


var $6855b0e4fef0dbbe$exports = {};


var $f81fe8e548a259fc$exports = {};

$parcel$export($f81fe8e548a259fc$exports, "JacobianPoint", () => $f81fe8e548a259fc$export$54579cb87d860a47);

class $f81fe8e548a259fc$export$54579cb87d860a47 {
    x;
    y;
    z;
    isInfinity;
    ec;
    static fromBytes(bytes, isExtension, ec = (0, $00e9cfcde39d0b4a$export$df72980aaa0ca402)) {
        const provider = isExtension ? (0, $ee4c81c840b9d78d$export$3250f1bd1b840331) : (0, $61122e18a0bc5a58$export$312db8bf004879ae);
        if (isExtension) {
            if (bytes.length !== 96) throw new Error("Expected 96 bytes.");
        } else {
            if (bytes.length !== 48) throw new Error("Expected 48 bytes.");
        }
        const mByte = bytes[0] & 0xe0;
        if ([
            0x20,
            0x60,
            0xe0
        ].includes(mByte)) throw new Error("Invalid first three bits.");
        const compressed = (mByte & 0x80) !== 0;
        const infinity = (mByte & 0x40) !== 0;
        const signed = (mByte & 0x20) !== 0;
        if (!compressed) throw new Error("Compression bit must be 1.");
        bytes[0] &= 0x1f;
        if (infinity) {
            for (const byte of bytes){
                if (byte !== 0) throw new Error("Point at infinity, but found non-zero byte.");
            }
            return new (0, $4508fd1f2dfd87e3$export$567266b06c239d21)(provider.nil.zero(ec.q), provider.nil.zero(ec.q), true, ec).toJacobian();
        }
        const x = (isExtension ? (0, $ee4c81c840b9d78d$export$3250f1bd1b840331) : (0, $61122e18a0bc5a58$export$312db8bf004879ae)).nil.fromBytes(ec.q, bytes);
        const yValue = (0, $27314bc03f74868b$export$c28dd39fe7cf1942)(x, ec);
        const sign = isExtension ? (0, $27314bc03f74868b$export$1f050984502bf9f6)(yValue, ec) : (0, $27314bc03f74868b$export$42e585c8f08aa7c5)(yValue, ec);
        const y = sign === signed ? yValue : yValue.negate();
        return new (0, $4508fd1f2dfd87e3$export$567266b06c239d21)(x, y, false, ec).toJacobian();
    }
    static fromHex(hex, isExtension, ec = (0, $00e9cfcde39d0b4a$export$df72980aaa0ca402)) {
        return $f81fe8e548a259fc$export$54579cb87d860a47.fromBytes((0, $11b8831ba7e63616$export$1a8ceedbd5845648)(hex), isExtension, ec);
    }
    static generateG1() {
        return new (0, $4508fd1f2dfd87e3$export$567266b06c239d21)((0, $00e9cfcde39d0b4a$export$df72980aaa0ca402).gx, (0, $00e9cfcde39d0b4a$export$df72980aaa0ca402).gy, false, (0, $00e9cfcde39d0b4a$export$df72980aaa0ca402)).toJacobian();
    }
    static generateG2() {
        return new (0, $4508fd1f2dfd87e3$export$567266b06c239d21)((0, $00e9cfcde39d0b4a$export$89bff894721071da).g2x, (0, $00e9cfcde39d0b4a$export$89bff894721071da).g2y, false, (0, $00e9cfcde39d0b4a$export$89bff894721071da)).toJacobian();
    }
    static infinityG1(isExtension = false) {
        const provider = isExtension ? (0, $ee4c81c840b9d78d$export$3250f1bd1b840331) : (0, $61122e18a0bc5a58$export$312db8bf004879ae);
        return new $f81fe8e548a259fc$export$54579cb87d860a47(provider.nil.zero((0, $00e9cfcde39d0b4a$export$df72980aaa0ca402).q), provider.nil.zero((0, $00e9cfcde39d0b4a$export$df72980aaa0ca402).q), provider.nil.zero((0, $00e9cfcde39d0b4a$export$df72980aaa0ca402).q), true, (0, $00e9cfcde39d0b4a$export$df72980aaa0ca402));
    }
    static infinityG2(isExtension = true) {
        const provider = isExtension ? (0, $ee4c81c840b9d78d$export$3250f1bd1b840331) : (0, $61122e18a0bc5a58$export$312db8bf004879ae);
        return new $f81fe8e548a259fc$export$54579cb87d860a47(provider.nil.zero((0, $00e9cfcde39d0b4a$export$89bff894721071da).q), provider.nil.zero((0, $00e9cfcde39d0b4a$export$89bff894721071da).q), provider.nil.zero((0, $00e9cfcde39d0b4a$export$89bff894721071da).q), true, (0, $00e9cfcde39d0b4a$export$89bff894721071da));
    }
    static fromBytesG1(bytes, isExtension = false) {
        return $f81fe8e548a259fc$export$54579cb87d860a47.fromBytes(bytes, isExtension, (0, $00e9cfcde39d0b4a$export$df72980aaa0ca402));
    }
    static fromBytesG2(bytes, isExtension = true) {
        return $f81fe8e548a259fc$export$54579cb87d860a47.fromBytes(bytes, isExtension, (0, $00e9cfcde39d0b4a$export$89bff894721071da));
    }
    static fromHexG1(hex, isExtension = false) {
        return $f81fe8e548a259fc$export$54579cb87d860a47.fromBytesG1((0, $11b8831ba7e63616$export$1a8ceedbd5845648)(hex), isExtension);
    }
    static fromHexG2(hex, isExtension = true) {
        return $f81fe8e548a259fc$export$54579cb87d860a47.fromBytesG2((0, $11b8831ba7e63616$export$1a8ceedbd5845648)(hex), isExtension);
    }
    constructor(x, y, z, isInfinity, ec = (0, $00e9cfcde39d0b4a$export$df72980aaa0ca402)){
        this.x = x;
        this.y = y;
        this.z = z;
        this.isInfinity = isInfinity;
        this.ec = ec;
        (0, $8d5e30fd5fa02b49$export$a7a9523472993e97)(x instanceof y.constructor);
        (0, $8d5e30fd5fa02b49$export$a7a9523472993e97)(y instanceof z.constructor);
    }
    isOnCurve() {
        return this.isInfinity || this.toAffine().isOnCurve();
    }
    isValid() {
        return this.isOnCurve() && this.multiply(this.ec.n).equals(this.x instanceof (0, $61122e18a0bc5a58$export$312db8bf004879ae) ? $f81fe8e548a259fc$export$54579cb87d860a47.infinityG1() : $f81fe8e548a259fc$export$54579cb87d860a47.infinityG2());
    }
    getFingerprint() {
        const bytes = this.toBytes();
        return (0, $11b8831ba7e63616$export$b25202b2d7056da9)((0, $20b42468fafd22ce$export$699b481075cb9e0d)(bytes).slice(0, 4), "big");
    }
    toAffine() {
        return this.isInfinity ? new (0, $4508fd1f2dfd87e3$export$567266b06c239d21)(this.x.zero(this.ec.q), this.y.zero(this.ec.q), true, this.ec) : new (0, $4508fd1f2dfd87e3$export$567266b06c239d21)(this.x.divide(this.z.pow(2n)), this.y.divide(this.z.pow(3n)), false, this.ec);
    }
    toBytes() {
        const point = this.toAffine();
        const output = point.x.toBytes();
        if (point.isInfinity) {
            const bytes = [
                0xc0
            ];
            for(let i = 0; i < output.length - 1; i++)bytes.push(0);
            return Uint8Array.from(bytes);
        }
        const sign = point.y instanceof (0, $ee4c81c840b9d78d$export$3250f1bd1b840331) ? (0, $27314bc03f74868b$export$1f050984502bf9f6)(point.y, this.ec) : (0, $27314bc03f74868b$export$42e585c8f08aa7c5)(point.y, this.ec);
        output[0] |= sign ? 0xa0 : 0x80;
        return output;
    }
    toHex() {
        return (0, $11b8831ba7e63616$export$7ea66e3774a60b67)(this.toBytes());
    }
    toString() {
        return `JacobianPoint(x=${this.x}, y=${this.y}, z=${this.z}, i=${this.isInfinity})`;
    }
    double() {
        if (this.isInfinity || this.y.equals(this.x.zero(this.ec.q))) return new $f81fe8e548a259fc$export$54579cb87d860a47(this.x.one(this.ec.q), this.x.one(this.ec.q), this.x.zero(this.ec.q), true, this.ec);
        const S = this.x.multiply(this.y).multiply(this.y).multiply(new (0, $61122e18a0bc5a58$export$312db8bf004879ae)(this.ec.q, 4n));
        const Z_sq = this.z.multiply(this.z);
        const Z_4th = Z_sq.multiply(Z_sq);
        const Y_sq = this.y.multiply(this.y);
        const Y_4th = Y_sq.multiply(Y_sq);
        const M = this.x.multiply(this.x).multiply(new (0, $61122e18a0bc5a58$export$312db8bf004879ae)(this.ec.q, 3n)).add(this.ec.a.multiply(Z_4th));
        const X_p = M.multiply(M).subtract(S.multiply(new (0, $61122e18a0bc5a58$export$312db8bf004879ae)(this.ec.q, 2n)));
        const Y_p = M.multiply(S.subtract(X_p)).subtract(Y_4th.multiply(new (0, $61122e18a0bc5a58$export$312db8bf004879ae)(this.ec.q, 8n)));
        const Z_p = this.y.multiply(this.z).multiply(new (0, $61122e18a0bc5a58$export$312db8bf004879ae)(this.ec.q, 2n));
        return new $f81fe8e548a259fc$export$54579cb87d860a47(X_p, Y_p, Z_p, false, this.ec);
    }
    negate() {
        return this.toAffine().negate().toJacobian();
    }
    add(value) {
        if (this.isInfinity) return value;
        else if (value.isInfinity) return this;
        const U1 = this.x.multiply(value.z.pow(2n));
        const U2 = value.x.multiply(this.z.pow(2n));
        const S1 = this.y.multiply(value.z.pow(3n));
        const S2 = value.y.multiply(this.z.pow(3n));
        if (U1.equals(U2)) {
            if (!S1.equals(S2)) return new $f81fe8e548a259fc$export$54579cb87d860a47(this.x.one(this.ec.q), this.x.one(this.ec.q), this.x.zero(this.ec.q), true, this.ec);
            else return this.double();
        }
        const H = U2.subtract(U1);
        const R = S2.subtract(S1);
        const H_sq = H.multiply(H);
        const H_cu = H.multiply(H_sq);
        const X3 = R.multiply(R).subtract(H_cu).subtract(U1.multiply(H_sq).multiply(new (0, $61122e18a0bc5a58$export$312db8bf004879ae)(this.ec.q, 2n)));
        const Y3 = R.multiply(U1.multiply(H_sq).subtract(X3)).subtract(S1.multiply(H_cu));
        const Z3 = H.multiply(this.z).multiply(value.z);
        return new $f81fe8e548a259fc$export$54579cb87d860a47(X3, Y3, Z3, false, this.ec);
    }
    multiply(value) {
        return (0, $27314bc03f74868b$export$6fc8005fc3e0ffe8)(value, this, this.ec);
    }
    equals(value) {
        return this.toAffine().equals(value.toAffine());
    }
    clone() {
        return new $f81fe8e548a259fc$export$54579cb87d860a47(this.x.clone(), this.y.clone(), this.z.clone(), this.isInfinity, this.ec);
    }
}


var $652b9d23a743e8c2$exports = {};

$parcel$export($652b9d23a743e8c2$exports, "OperatorError", () => $652b9d23a743e8c2$export$b279dc3e096c808b);
class $652b9d23a743e8c2$export$b279dc3e096c808b extends Error {
    constructor(message){
        super(message);
        Object.setPrototypeOf(this, $652b9d23a743e8c2$export$b279dc3e096c808b.prototype);
    }
}


var $8d5e30fd5fa02b49$exports = {};

$parcel$export($8d5e30fd5fa02b49$exports, "AssertionError", () => $8d5e30fd5fa02b49$export$7750cdfb4db2c3d);
$parcel$export($8d5e30fd5fa02b49$exports, "assert", () => $8d5e30fd5fa02b49$export$a7a9523472993e97);
class $8d5e30fd5fa02b49$export$7750cdfb4db2c3d extends Error {
    constructor(message){
        super(message);
        Object.setPrototypeOf(this, $8d5e30fd5fa02b49$export$7750cdfb4db2c3d.prototype);
    }
}
function $8d5e30fd5fa02b49$export$a7a9523472993e97(test, message = "Assertion failed.") {
    if (!test) throw new $8d5e30fd5fa02b49$export$7750cdfb4db2c3d(message);
}


var $d8b9abe285040e16$exports = {};


var $b7fd6731762bdca0$exports = {};

$parcel$export($b7fd6731762bdca0$exports, "PrivateKey", () => $b7fd6731762bdca0$export$8f54525b330fd87b);

class $b7fd6731762bdca0$export$8f54525b330fd87b {
    value;
    static size = 32;
    static fromBytes(bytes) {
        return new $b7fd6731762bdca0$export$8f54525b330fd87b((0, $013cd1e91a5ae572$export$842a2cf37af977e1)((0, $11b8831ba7e63616$export$2a52511e4f35930a)(bytes, "big"), (0, $00e9cfcde39d0b4a$export$df72980aaa0ca402).n));
    }
    static fromHex(hex) {
        return $b7fd6731762bdca0$export$8f54525b330fd87b.fromBytes((0, $11b8831ba7e63616$export$1a8ceedbd5845648)(hex));
    }
    static fromSeed(seed) {
        const length = 48;
        const okm = (0, $5758ad345f58e7ac$export$c0375ac2990d2f65)(length, Uint8Array.from([
            ...seed,
            0
        ]), new TextEncoder().encode("BLS-SIG-KEYGEN-SALT-"), Uint8Array.from([
            0,
            length
        ]));
        return new $b7fd6731762bdca0$export$8f54525b330fd87b((0, $013cd1e91a5ae572$export$842a2cf37af977e1)((0, $11b8831ba7e63616$export$2a52511e4f35930a)(okm, "big"), (0, $00e9cfcde39d0b4a$export$df72980aaa0ca402).n));
    }
    static fromBigInt(value) {
        return new $b7fd6731762bdca0$export$8f54525b330fd87b((0, $013cd1e91a5ae572$export$842a2cf37af977e1)(value, (0, $00e9cfcde39d0b4a$export$df72980aaa0ca402).n));
    }
    static aggregate(privateKeys) {
        return new $b7fd6731762bdca0$export$8f54525b330fd87b((0, $013cd1e91a5ae572$export$842a2cf37af977e1)(privateKeys.reduce((aggregate, privateKey)=>aggregate + privateKey.value, 0n), (0, $00e9cfcde39d0b4a$export$df72980aaa0ca402).n));
    }
    constructor(value){
        this.value = value;
        (0, $8d5e30fd5fa02b49$export$a7a9523472993e97)(value < (0, $00e9cfcde39d0b4a$export$df72980aaa0ca402).n);
    }
    getG1() {
        return (0, $f81fe8e548a259fc$export$54579cb87d860a47).generateG1().multiply(this.value);
    }
    toBytes() {
        return (0, $11b8831ba7e63616$export$c0f6630717bc20c7)(this.value, $b7fd6731762bdca0$export$8f54525b330fd87b.size, "big");
    }
    toHex() {
        return (0, $11b8831ba7e63616$export$7ea66e3774a60b67)(this.toBytes());
    }
    toString() {
        return `PrivateKey(0x${this.toHex()})`;
    }
    equals(value) {
        return this.value === value.value;
    }
}


var $46e980308398850e$exports = {};

$parcel$export($46e980308398850e$exports, "AugSchemeMPL", () => $46e980308398850e$export$11fa5fadc101995e);

class $46e980308398850e$export$11fa5fadc101995e {
    static keyGen(seed) {
        return (0, $6263a241ee4922bd$export$6b169d3865731b08)(seed);
    }
    static sign(privateKey, message) {
        const publicKey = privateKey.getG1();
        return (0, $e66c6c730aa32243$export$d36c55300691c9bd)(privateKey, Uint8Array.from([
            ...publicKey.toBytes(),
            ...message
        ]), (0, $5f5e7634db6ec17d$export$5b346028b2eb430c));
    }
    static sign_prepend(privateKey, message, prependPublicKey) {
        return (0, $e66c6c730aa32243$export$d36c55300691c9bd)(privateKey, Uint8Array.from([
            ...prependPublicKey.toBytes(),
            ...message
        ]), (0, $5f5e7634db6ec17d$export$5b346028b2eb430c));
    }
    static verify(publicKey, message, signature) {
        return (0, $e66c6c730aa32243$export$fa86e59803ac4685)(publicKey, Uint8Array.from([
            ...publicKey.toBytes(),
            ...message
        ]), signature, (0, $5f5e7634db6ec17d$export$5b346028b2eb430c));
    }
    static aggregate(signatures) {
        return (0, $e66c6c730aa32243$export$58639efa77ac2d9c)(signatures);
    }
    static aggregateVerify(publicKeys, messages, signature) {
        if (publicKeys.length !== messages.length || !publicKeys.length) return false;
        const mPrimes = [];
        for(let i = 0; i < publicKeys.length; i++)mPrimes.push(Uint8Array.from([
            ...publicKeys[i].toBytes(),
            ...messages[i]
        ]));
        return (0, $e66c6c730aa32243$export$6d85de9d133db9bf)(publicKeys, mPrimes, signature, (0, $5f5e7634db6ec17d$export$5b346028b2eb430c));
    }
    static deriveChildSk(privateKey, index) {
        return (0, $6263a241ee4922bd$export$5db2ff97ac93f09f)(privateKey, index);
    }
    static deriveChildSkUnhardened(privateKey, index) {
        return (0, $6263a241ee4922bd$export$3d98d96efbfaa93e)(privateKey, index);
    }
    static deriveChildPkUnhardened(publicKey, index) {
        return (0, $6263a241ee4922bd$export$5c5df4dc4bd00c4c)(publicKey, index);
    }
}


var $cbd8901008cf0b7e$exports = {};

$parcel$export($cbd8901008cf0b7e$exports, "BasicSchemeMPL", () => $cbd8901008cf0b7e$export$4eba737f59c212f9);

class $cbd8901008cf0b7e$export$4eba737f59c212f9 {
    static keyGen(seed) {
        return (0, $6263a241ee4922bd$export$6b169d3865731b08)(seed);
    }
    static sign(privateKey, message) {
        return (0, $e66c6c730aa32243$export$d36c55300691c9bd)(privateKey, message, (0, $5f5e7634db6ec17d$export$c1bffad7aeda544b));
    }
    static verify(publicKey, message, signature) {
        return (0, $e66c6c730aa32243$export$fa86e59803ac4685)(publicKey, message, signature, (0, $5f5e7634db6ec17d$export$c1bffad7aeda544b));
    }
    static aggregate(signatures) {
        return (0, $e66c6c730aa32243$export$58639efa77ac2d9c)(signatures);
    }
    static aggregateVerify(publicKeys, messages, signature) {
        if (publicKeys.length !== messages.length || !publicKeys.length) return false;
        for (const message of messages)for (const match of messages){
            if (message !== match && (0, $11b8831ba7e63616$export$c663ab80cce302c5)(message, match)) return false;
        }
        return (0, $e66c6c730aa32243$export$6d85de9d133db9bf)(publicKeys, messages, signature, (0, $5f5e7634db6ec17d$export$c1bffad7aeda544b));
    }
    static deriveChildSk(privateKey, index) {
        return (0, $6263a241ee4922bd$export$5db2ff97ac93f09f)(privateKey, index);
    }
    static deriveChildSkUnhardened(privateKey, index) {
        return (0, $6263a241ee4922bd$export$3d98d96efbfaa93e)(privateKey, index);
    }
    static deriveChildPkUnhardened(publicKey, index) {
        return (0, $6263a241ee4922bd$export$5c5df4dc4bd00c4c)(publicKey, index);
    }
}


var $c20e836927ce4374$exports = {};

$parcel$export($c20e836927ce4374$exports, "PopSchemeMPL", () => $c20e836927ce4374$export$b768295c529d6107);

class $c20e836927ce4374$export$b768295c529d6107 {
    static keyGen(seed) {
        return (0, $6263a241ee4922bd$export$6b169d3865731b08)(seed);
    }
    static sign(privateKey, message) {
        return (0, $e66c6c730aa32243$export$d36c55300691c9bd)(privateKey, message, (0, $5f5e7634db6ec17d$export$8d64a5ed43a5a57c));
    }
    static verify(publicKey, message, signature) {
        return (0, $e66c6c730aa32243$export$fa86e59803ac4685)(publicKey, message, signature, (0, $5f5e7634db6ec17d$export$8d64a5ed43a5a57c));
    }
    static aggregate(signatures) {
        return (0, $e66c6c730aa32243$export$58639efa77ac2d9c)(signatures);
    }
    static aggregateVerify(publicKeys, messages, signature) {
        if (publicKeys.length !== messages.length || !publicKeys.length) return false;
        for (const message of messages)for (const match of messages){
            if (message !== match && (0, $11b8831ba7e63616$export$c663ab80cce302c5)(message, match)) return false;
        }
        return (0, $e66c6c730aa32243$export$6d85de9d133db9bf)(publicKeys, messages, signature, (0, $5f5e7634db6ec17d$export$8d64a5ed43a5a57c));
    }
    static popProve(privateKey) {
        const publicKey = privateKey.getG1();
        return (0, $8c194b1bdb7378af$export$74473883de6345ad)(publicKey.toBytes(), (0, $5f5e7634db6ec17d$export$b554d748bc2a5eef)).multiply(privateKey.value);
    }
    static popVerify(publicKey, proof) {
        try {
            (0, $8d5e30fd5fa02b49$export$a7a9523472993e97)(proof.isValid());
            (0, $8d5e30fd5fa02b49$export$a7a9523472993e97)(publicKey.isValid());
            const q = (0, $8c194b1bdb7378af$export$74473883de6345ad)(publicKey.toBytes(), (0, $5f5e7634db6ec17d$export$b554d748bc2a5eef));
            const one = (0, $e01fe8766586be5e$export$d12e5c25403eca16).nil.one((0, $00e9cfcde39d0b4a$export$df72980aaa0ca402).q);
            const pairingResult = (0, $18de921ac0e3bf52$export$18b00e9902a9edab)([
                publicKey,
                (0, $f81fe8e548a259fc$export$54579cb87d860a47).generateG1().negate()
            ], [
                q,
                proof
            ]);
            return pairingResult.equals(one);
        } catch (e) {
            if (e instanceof (0, $8d5e30fd5fa02b49$export$7750cdfb4db2c3d)) return false;
            throw e;
        }
    }
    static fastAggregateVerify(publicKeys, message, signature) {
        if (!publicKeys.length) return false;
        let aggregate = publicKeys[0];
        for (const publicKey of publicKeys.slice(1))aggregate = aggregate.add(publicKey);
        return (0, $e66c6c730aa32243$export$fa86e59803ac4685)(aggregate, message, signature, (0, $5f5e7634db6ec17d$export$8d64a5ed43a5a57c));
    }
    static deriveChildSk(privateKey, index) {
        return (0, $6263a241ee4922bd$export$5db2ff97ac93f09f)(privateKey, index);
    }
    static deriveChildSkUnhardened(privateKey, index) {
        return (0, $6263a241ee4922bd$export$3d98d96efbfaa93e)(privateKey, index);
    }
    static deriveChildPkUnhardened(publicKey, index) {
        return (0, $6263a241ee4922bd$export$5c5df4dc4bd00c4c)(publicKey, index);
    }
}


var $11b8831ba7e63616$exports = {};

$parcel$export($11b8831ba7e63616$exports, "flip", () => $11b8831ba7e63616$export$8a83211c878a3f1f);
$parcel$export($11b8831ba7e63616$exports, "intBitLength", () => $11b8831ba7e63616$export$750ad761648c1996);
$parcel$export($11b8831ba7e63616$exports, "bigIntBitLength", () => $11b8831ba7e63616$export$311832b55488d870);
$parcel$export($11b8831ba7e63616$exports, "bigIntToBits", () => $11b8831ba7e63616$export$59537329b9c511e9);
$parcel$export($11b8831ba7e63616$exports, "intToBits", () => $11b8831ba7e63616$export$98328bcdfd55e72d);
$parcel$export($11b8831ba7e63616$exports, "intToBytes", () => $11b8831ba7e63616$export$7f883c9b3dcb5103);
$parcel$export($11b8831ba7e63616$exports, "bytesToInt", () => $11b8831ba7e63616$export$b25202b2d7056da9);
$parcel$export($11b8831ba7e63616$exports, "encodeInt", () => $11b8831ba7e63616$export$28bc1625998ce845);
$parcel$export($11b8831ba7e63616$exports, "decodeInt", () => $11b8831ba7e63616$export$2046d9d5fd83c6e2);
$parcel$export($11b8831ba7e63616$exports, "bigIntToBytes", () => $11b8831ba7e63616$export$c0f6630717bc20c7);
$parcel$export($11b8831ba7e63616$exports, "bytesToBigInt", () => $11b8831ba7e63616$export$2a52511e4f35930a);
$parcel$export($11b8831ba7e63616$exports, "encodeBigInt", () => $11b8831ba7e63616$export$2797dcbce5606dae);
$parcel$export($11b8831ba7e63616$exports, "decodeBigInt", () => $11b8831ba7e63616$export$630067042493230b);
$parcel$export($11b8831ba7e63616$exports, "concatBytes", () => $11b8831ba7e63616$export$287dd7971339c972);
$parcel$export($11b8831ba7e63616$exports, "bytesEqual", () => $11b8831ba7e63616$export$c663ab80cce302c5);
$parcel$export($11b8831ba7e63616$exports, "toHex", () => $11b8831ba7e63616$export$7ea66e3774a60b67);
$parcel$export($11b8831ba7e63616$exports, "fromHex", () => $11b8831ba7e63616$export$1a8ceedbd5845648);

function $11b8831ba7e63616$export$8a83211c878a3f1f(binary) {
    return binary.replace(/[01]/g, (match)=>match === "0" ? "1" : "0");
}
function $11b8831ba7e63616$export$750ad761648c1996(value) {
    return Math.abs(value).toString(2).length;
}
function $11b8831ba7e63616$export$311832b55488d870(value) {
    return (value < 0n ? -value : value).toString(2).length;
}
function $11b8831ba7e63616$export$59537329b9c511e9(i) {
    if (i < 1n) return [
        0
    ];
    const bits = [];
    while(i !== 0n){
        bits.push(Number((0, $013cd1e91a5ae572$export$842a2cf37af977e1)(i, 2n)));
        i /= 2n;
    }
    return bits.reverse();
}
function $11b8831ba7e63616$export$98328bcdfd55e72d(i) {
    if (i < 1) return [
        0
    ];
    const bits = [];
    while(i !== 0){
        bits.push(Number((0, $013cd1e91a5ae572$export$64b58c5b0372ae95)(i, 2)));
        i /= 2;
    }
    return bits.reverse();
}
function $11b8831ba7e63616$export$7f883c9b3dcb5103(value, size, endian, signed = false) {
    if (value < 0 && !signed) throw new Error("Cannot convert negative number to unsigned.");
    if (Math.floor(value) !== value) throw new Error("Cannot convert floating point number.");
    let binary = Math.abs(value).toString(2).padStart(size * 8, "0");
    if (value < 0) binary = (parseInt($11b8831ba7e63616$export$8a83211c878a3f1f(binary), 2) + 1).toString(2).padStart(size * 8, "0");
    var bytes = binary.match(/[01]{8}/g).map((match)=>parseInt(match, 2));
    if (endian === "little") bytes.reverse();
    return Uint8Array.from(bytes);
}
function $11b8831ba7e63616$export$b25202b2d7056da9(bytes, endian, signed = false) {
    if (bytes.length === 0) return 0;
    const sign = bytes[endian === "little" ? bytes.length - 1 : 0].toString(2).padStart(8, "0")[0];
    const byteList = endian === "little" ? bytes.reverse() : bytes;
    let binary = "";
    for (const byte of byteList)binary += byte.toString(2).padStart(8, "0");
    if (sign === "1" && signed) binary = (parseInt($11b8831ba7e63616$export$8a83211c878a3f1f(binary), 2) + 1).toString(2).padStart(bytes.length * 8, "0");
    const result = parseInt(binary, 2);
    return sign === "1" && signed ? -result : result;
}
function $11b8831ba7e63616$export$28bc1625998ce845(value) {
    if (value === 0) return Uint8Array.from([]);
    const length = $11b8831ba7e63616$export$750ad761648c1996(value) + 8 >> 3;
    let bytes = $11b8831ba7e63616$export$7f883c9b3dcb5103(value, length, "big", true);
    while(bytes.length > 1 && bytes[0] === ((bytes[1] & 0x80) !== 0 ? 0xff : 0))bytes = bytes.slice(1);
    return bytes;
}
function $11b8831ba7e63616$export$2046d9d5fd83c6e2(bytes) {
    return $11b8831ba7e63616$export$b25202b2d7056da9(bytes, "big", true);
}
function $11b8831ba7e63616$export$c0f6630717bc20c7(value, size, endian, signed = false) {
    if (value < 0n && !signed) throw new Error("Cannot convert negative number to unsigned.");
    let binary = (value < 0n ? -value : value).toString(2).padStart(size * 8, "0");
    if (value < 0) binary = (BigInt("0b" + $11b8831ba7e63616$export$8a83211c878a3f1f(binary)) + 1n).toString(2).padStart(size * 8, "0");
    var bytes = binary.match(/[01]{8}/g).map((match)=>parseInt(match, 2));
    if (endian === "little") bytes.reverse();
    return Uint8Array.from(bytes);
}
function $11b8831ba7e63616$export$2a52511e4f35930a(bytes, endian, signed = false) {
    if (bytes.length === 0) return 0n;
    const sign = bytes[endian === "little" ? bytes.length - 1 : 0].toString(2).padStart(8, "0")[0];
    const byteList = endian === "little" ? bytes.reverse() : bytes;
    let binary = "";
    for (const byte of byteList)binary += byte.toString(2).padStart(8, "0");
    if (sign === "1" && signed) binary = (BigInt("0b" + $11b8831ba7e63616$export$8a83211c878a3f1f(binary)) + 1n).toString(2).padStart(bytes.length * 8, "0");
    const result = BigInt("0b" + binary);
    return sign === "1" && signed ? -result : result;
}
function $11b8831ba7e63616$export$2797dcbce5606dae(value) {
    if (value === 0n) return Uint8Array.from([]);
    const length = $11b8831ba7e63616$export$311832b55488d870(value) + 8 >> 3;
    let bytes = $11b8831ba7e63616$export$c0f6630717bc20c7(value, length, "big", true);
    while(bytes.length > 1 && bytes[0] === ((bytes[1] & 0x80) !== 0 ? 0xff : 0))bytes = bytes.slice(1);
    return bytes;
}
function $11b8831ba7e63616$export$630067042493230b(bytes) {
    return $11b8831ba7e63616$export$2a52511e4f35930a(bytes, "big", true);
}
function $11b8831ba7e63616$export$287dd7971339c972(...lists) {
    const bytes = [];
    for (const list of lists)for (const byte of list)bytes.push(byte);
    return Uint8Array.from(bytes);
}
function $11b8831ba7e63616$export$c663ab80cce302c5(a, b) {
    return a.length === b.length && a.findIndex((byte, i)=>b[i] !== byte) === -1;
}
const $11b8831ba7e63616$var$HEX_STRINGS = "0123456789abcdef";
const $11b8831ba7e63616$var$MAP_HEX = {
    "0": 0,
    "1": 1,
    "2": 2,
    "3": 3,
    "4": 4,
    "5": 5,
    "6": 6,
    "7": 7,
    "8": 8,
    "9": 9,
    a: 10,
    b: 11,
    c: 12,
    d: 13,
    e: 14,
    f: 15,
    A: 10,
    B: 11,
    C: 12,
    D: 13,
    E: 14,
    F: 15
};
function $11b8831ba7e63616$export$7ea66e3774a60b67(bytes) {
    return Array.from(bytes).map((b)=>$11b8831ba7e63616$var$HEX_STRINGS[b >> 4] + $11b8831ba7e63616$var$HEX_STRINGS[b & 15]).join("");
}
function $11b8831ba7e63616$export$1a8ceedbd5845648(hex) {
    const bytes = new Uint8Array(Math.floor(hex.length / 2));
    let i;
    for(i = 0; i < bytes.length; i++){
        const a = $11b8831ba7e63616$var$MAP_HEX[hex[i * 2]];
        const b = $11b8831ba7e63616$var$MAP_HEX[hex[i * 2 + 1]];
        if (a === undefined || b === undefined) break;
        bytes[i] = a << 4 | b;
    }
    return i === bytes.length ? bytes : bytes.slice(0, i);
}


var $27314bc03f74868b$exports = {};

$parcel$export($27314bc03f74868b$exports, "yForX", () => $27314bc03f74868b$export$c28dd39fe7cf1942);
$parcel$export($27314bc03f74868b$exports, "scalarMultJacobian", () => $27314bc03f74868b$export$6fc8005fc3e0ffe8);
$parcel$export($27314bc03f74868b$exports, "evalIso", () => $27314bc03f74868b$export$27808dd10edd4c0f);
$parcel$export($27314bc03f74868b$exports, "signFq", () => $27314bc03f74868b$export$42e585c8f08aa7c5);
$parcel$export($27314bc03f74868b$exports, "signFq2", () => $27314bc03f74868b$export$1f050984502bf9f6);

function $27314bc03f74868b$export$c28dd39fe7cf1942(x, ec = (0, $00e9cfcde39d0b4a$export$df72980aaa0ca402)) {
    const u = x.multiply(x).multiply(x).add(ec.a.multiply(x)).add(ec.b);
    const y = u.modSqrt();
    if (y.equals(0n) || !new (0, $4508fd1f2dfd87e3$export$567266b06c239d21)(x, y, false, ec).isOnCurve()) throw new Error("No y for point x.");
    return y;
}
function $27314bc03f74868b$export$6fc8005fc3e0ffe8(value, point, ec = (0, $00e9cfcde39d0b4a$export$df72980aaa0ca402)) {
    if (value instanceof (0, $61122e18a0bc5a58$export$312db8bf004879ae)) value = value.value;
    let result = new (0, $f81fe8e548a259fc$export$54579cb87d860a47)(point.x.one(ec.q), point.x.one(ec.q), point.x.zero(ec.q), true, ec);
    if (point.isInfinity || (0, $013cd1e91a5ae572$export$842a2cf37af977e1)(value, ec.q) === 0n) return result;
    let addend = point;
    while(value > 0n){
        if (value & 1n) result = result.add(addend);
        addend = addend.add(addend);
        value >>= 1n;
    }
    return result;
}
function $27314bc03f74868b$export$27808dd10edd4c0f(P, mapCoeffs, ec) {
    const { x: x, y: y, z: z } = P;
    const mapValues = [
        null,
        null,
        null,
        null
    ];
    let maxOrd = mapCoeffs[0].length;
    for (const coeffs of mapCoeffs.slice(1))maxOrd = Math.max(maxOrd, coeffs.length);
    const zPows = [];
    for(let i = 0; i < maxOrd; i++)zPows.push(null);
    zPows[0] = z.pow(0n);
    zPows[1] = z.pow(2n);
    for(let i = 2; i < zPows.length; i++){
        (0, $8d5e30fd5fa02b49$export$a7a9523472993e97)(zPows[i - 1] !== null);
        (0, $8d5e30fd5fa02b49$export$a7a9523472993e97)(zPows[1] !== null);
        zPows[i] = zPows[i - 1]?.multiply(zPows[1]);
    }
    for (const [i, item] of mapCoeffs.entries()){
        const coeffsZ = item.slice().reverse().map((item, i)=>item.multiply(zPows[i]));
        let temp = coeffsZ[0];
        for (const coeff of coeffsZ.slice(1)){
            temp = temp.multiply(x);
            temp = temp.add(coeff);
        }
        mapValues[i] = temp;
    }
    (0, $8d5e30fd5fa02b49$export$a7a9523472993e97)(mapCoeffs[1].length + 1 === mapCoeffs[0].length);
    (0, $8d5e30fd5fa02b49$export$a7a9523472993e97)(zPows[1] !== null);
    (0, $8d5e30fd5fa02b49$export$a7a9523472993e97)(mapValues[1] !== null);
    mapValues[1] = mapValues[1]?.multiply(zPows[1]);
    (0, $8d5e30fd5fa02b49$export$a7a9523472993e97)(mapValues[2] !== null);
    (0, $8d5e30fd5fa02b49$export$a7a9523472993e97)(mapValues[3] !== null);
    mapValues[2] = mapValues[2].multiply(y);
    mapValues[3] = mapValues[3].multiply(z.pow(3n));
    const Z = mapValues[1].multiply(mapValues[3]);
    const X = mapValues[0].multiply(mapValues[3]).multiply(Z);
    const Y = mapValues[2].multiply(mapValues[1]).multiply(Z).multiply(Z);
    return new (0, $f81fe8e548a259fc$export$54579cb87d860a47)(X, Y, Z, P.isInfinity, ec);
}
function $27314bc03f74868b$export$42e585c8f08aa7c5(element, ec = (0, $00e9cfcde39d0b4a$export$df72980aaa0ca402)) {
    return element.gt(new (0, $61122e18a0bc5a58$export$312db8bf004879ae)(ec.q, (ec.q - 1n) / 2n));
}
function $27314bc03f74868b$export$1f050984502bf9f6(element, ec = (0, $00e9cfcde39d0b4a$export$89bff894721071da)) {
    if (element.elements[1].equals(new (0, $61122e18a0bc5a58$export$312db8bf004879ae)(ec.q, 0n))) return $27314bc03f74868b$export$42e585c8f08aa7c5(element.elements[0]);
    return element.elements[1].gt(new (0, $61122e18a0bc5a58$export$312db8bf004879ae)(ec.q, (ec.q - 1n) / 2n));
}


var $ee571e8a973337ec$exports = {};

$parcel$export($ee571e8a973337ec$exports, "I2OSP", () => $ee571e8a973337ec$export$d52448d6be44c59a);
$parcel$export($ee571e8a973337ec$exports, "OS2IP", () => $ee571e8a973337ec$export$c0271fff4884589f);
$parcel$export($ee571e8a973337ec$exports, "bytesXor", () => $ee571e8a973337ec$export$af8f3b1836f17aeb);
$parcel$export($ee571e8a973337ec$exports, "expandMessageXmd", () => $ee571e8a973337ec$export$ca94752eccc89d42);
$parcel$export($ee571e8a973337ec$exports, "expandMessageXof", () => $ee571e8a973337ec$export$153ad90a5a904109);
$parcel$export($ee571e8a973337ec$exports, "hashToField", () => $ee571e8a973337ec$export$a95bd8ce7381acba);
$parcel$export($ee571e8a973337ec$exports, "Hp", () => $ee571e8a973337ec$export$d6b81f59cdb268dc);
$parcel$export($ee571e8a973337ec$exports, "Hp2", () => $ee571e8a973337ec$export$55a2cd7ad104d927);

function $ee571e8a973337ec$export$d52448d6be44c59a(value, length) {
    if (value < 0n || value >= 1n << 8n * BigInt(length)) throw new Error(`Bad I2OSP call: value=${value}, length=${length}.`);
    const bytes = [];
    for(let i = 0; i < length; i++)bytes.push(0);
    let tempValue = value;
    for(let i = length - 1; i >= 0; i--){
        bytes[i] = Number(tempValue & 0xffn);
        tempValue >>= 8n;
    }
    const result = Uint8Array.from(bytes);
    const toBytesValue = (0, $11b8831ba7e63616$export$c0f6630717bc20c7)(value, length, "big");
    (0, $8d5e30fd5fa02b49$export$a7a9523472993e97)((0, $11b8831ba7e63616$export$c663ab80cce302c5)(result, toBytesValue));
    return result;
}
function $ee571e8a973337ec$export$c0271fff4884589f(octets) {
    let result = 0n;
    for (const octet of octets){
        result <<= 8n;
        result += BigInt(octet);
    }
    (0, $8d5e30fd5fa02b49$export$a7a9523472993e97)(result === (0, $11b8831ba7e63616$export$2a52511e4f35930a)(octets, "big"));
    return result;
}
function $ee571e8a973337ec$export$af8f3b1836f17aeb(a, b) {
    return Uint8Array.from(a.map((element, i)=>element ^ b[i]));
}
function $ee571e8a973337ec$export$ca94752eccc89d42(message, dst, length, hash) {
    const ell = Math.trunc((length + hash.byteSize - 1) / hash.byteSize);
    if (ell > 255) throw new Error(`Bad expandMessageXmd call: ell=${ell} out of range.`);
    const dst_prime = [
        ...dst,
        ...$ee571e8a973337ec$export$d52448d6be44c59a(BigInt(dst.length), 1)
    ];
    const Z_pad = $ee571e8a973337ec$export$d52448d6be44c59a(0n, hash.blockSize);
    const lib_str = $ee571e8a973337ec$export$d52448d6be44c59a(BigInt(length), 2);
    const b_0 = hash.convert(Uint8Array.from([
        ...Z_pad,
        ...message,
        ...lib_str,
        ...$ee571e8a973337ec$export$d52448d6be44c59a(0n, 1),
        ...dst_prime
    ]));
    const bValues = [];
    bValues.push(hash.convert(Uint8Array.from([
        ...b_0,
        ...$ee571e8a973337ec$export$d52448d6be44c59a(1n, 1),
        ...dst_prime
    ])));
    for(let i = 1; i <= ell; i++)bValues.push(hash.convert(Uint8Array.from([
        ...$ee571e8a973337ec$export$af8f3b1836f17aeb(b_0, bValues[i - 1]),
        ...$ee571e8a973337ec$export$d52448d6be44c59a(BigInt(i + 1), 1),
        ...dst_prime
    ])));
    const pseudoRandomBytes = [];
    for (const item of bValues)pseudoRandomBytes.push(...item);
    return Uint8Array.from(pseudoRandomBytes.slice(0, length));
}
function $ee571e8a973337ec$export$153ad90a5a904109(message, dst, length, hash) {
    const dst_prime = [
        ...dst,
        ...$ee571e8a973337ec$export$d52448d6be44c59a(BigInt(dst.length), 1)
    ];
    const message_prime = [
        ...message,
        ...$ee571e8a973337ec$export$d52448d6be44c59a(BigInt(length), 2),
        ...dst_prime
    ];
    return hash.convert(Uint8Array.from(message_prime)).slice(0, length);
}
function $ee571e8a973337ec$export$a95bd8ce7381acba(message, count, dst, modulus, degree, byteLength, expand, hash) {
    const lengthInBytes = count * degree * byteLength;
    const pseudoRandomBytes = expand(message, dst, lengthInBytes, hash);
    const uValues = [];
    for(let i = 0; i < count; i++){
        const eValues = [];
        for(let j = 0; j < degree; j++){
            const elmOffset = byteLength * (j + i * degree);
            const tv = pseudoRandomBytes.slice(elmOffset, elmOffset + byteLength);
            eValues.push((0, $013cd1e91a5ae572$export$842a2cf37af977e1)($ee571e8a973337ec$export$c0271fff4884589f(tv), modulus));
        }
        uValues.push(eValues);
    }
    return uValues;
}
function $ee571e8a973337ec$export$d6b81f59cdb268dc(message, count, dst) {
    return $ee571e8a973337ec$export$a95bd8ce7381acba(message, count, dst, (0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 1, 64, $ee571e8a973337ec$export$ca94752eccc89d42, (0, $1d6ac6ce37d39979$export$bced8d2aada2d1c9));
}
function $ee571e8a973337ec$export$55a2cd7ad104d927(message, count, dst) {
    return $ee571e8a973337ec$export$a95bd8ce7381acba(message, count, dst, (0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 2, 64, $ee571e8a973337ec$export$ca94752eccc89d42, (0, $1d6ac6ce37d39979$export$bced8d2aada2d1c9));
}


var $6263a241ee4922bd$exports = {};

$parcel$export($6263a241ee4922bd$exports, "keyGen", () => $6263a241ee4922bd$export$6b169d3865731b08);
$parcel$export($6263a241ee4922bd$exports, "ikmToLamportSk", () => $6263a241ee4922bd$export$9b45cf77d8dc3a4c);
$parcel$export($6263a241ee4922bd$exports, "parentSkToLamportPk", () => $6263a241ee4922bd$export$fd05bc46191446d1);
$parcel$export($6263a241ee4922bd$exports, "deriveChildSk", () => $6263a241ee4922bd$export$5db2ff97ac93f09f);
$parcel$export($6263a241ee4922bd$exports, "deriveChildSkUnhardened", () => $6263a241ee4922bd$export$3d98d96efbfaa93e);
$parcel$export($6263a241ee4922bd$exports, "deriveChildG1Unhardened", () => $6263a241ee4922bd$export$5c5df4dc4bd00c4c);
$parcel$export($6263a241ee4922bd$exports, "deriveChildG2Unhardened", () => $6263a241ee4922bd$export$5bdc4123f9cc0693);

function $6263a241ee4922bd$export$6b169d3865731b08(seed) {
    const length = 48;
    const okm = (0, $5758ad345f58e7ac$export$c0375ac2990d2f65)(length, Uint8Array.from([
        ...seed,
        0
    ]), new TextEncoder().encode("BLS-SIG-KEYGEN-SALT-"), Uint8Array.from([
        0,
        length
    ]));
    return new (0, $b7fd6731762bdca0$export$8f54525b330fd87b)((0, $013cd1e91a5ae572$export$842a2cf37af977e1)((0, $11b8831ba7e63616$export$2a52511e4f35930a)(okm, "big"), (0, $00e9cfcde39d0b4a$export$df72980aaa0ca402).n));
}
function $6263a241ee4922bd$export$9b45cf77d8dc3a4c(ikm, salt) {
    return (0, $5758ad345f58e7ac$export$c0375ac2990d2f65)(8160, ikm, salt, Uint8Array.from([]));
}
function $6263a241ee4922bd$export$fd05bc46191446d1(parentSk, index) {
    const salt = (0, $11b8831ba7e63616$export$7f883c9b3dcb5103)(index, 4, "big");
    const ikm = parentSk.toBytes();
    const notIkm = Uint8Array.from(ikm.map((e)=>e ^ 0xff));
    const lamport0 = $6263a241ee4922bd$export$9b45cf77d8dc3a4c(ikm, salt);
    const lamport1 = $6263a241ee4922bd$export$9b45cf77d8dc3a4c(notIkm, salt);
    const lamportPk = [];
    for(let i = 0; i < 255; i++)lamportPk.push(...(0, $20b42468fafd22ce$export$699b481075cb9e0d)(lamport0.slice(i * 32, (i + 1) * 32)));
    for(let i = 0; i < 255; i++)lamportPk.push(...(0, $20b42468fafd22ce$export$699b481075cb9e0d)(lamport1.slice(i * 32, (i + 1) * 32)));
    return (0, $20b42468fafd22ce$export$699b481075cb9e0d)(Uint8Array.from(lamportPk));
}
function $6263a241ee4922bd$export$5db2ff97ac93f09f(parentSk, index) {
    return $6263a241ee4922bd$export$6b169d3865731b08($6263a241ee4922bd$export$fd05bc46191446d1(parentSk, index));
}
function $6263a241ee4922bd$export$3d98d96efbfaa93e(parentSk, index) {
    const hash = (0, $20b42468fafd22ce$export$699b481075cb9e0d)(Uint8Array.from([
        ...parentSk.getG1().toBytes(),
        ...(0, $11b8831ba7e63616$export$7f883c9b3dcb5103)(index, 4, "big")
    ]));
    return (0, $b7fd6731762bdca0$export$8f54525b330fd87b).aggregate([
        (0, $b7fd6731762bdca0$export$8f54525b330fd87b).fromBytes(hash),
        parentSk
    ]);
}
function $6263a241ee4922bd$export$5c5df4dc4bd00c4c(parentPk, index) {
    const hash = (0, $20b42468fafd22ce$export$699b481075cb9e0d)(Uint8Array.from([
        ...parentPk.toBytes(),
        ...(0, $11b8831ba7e63616$export$7f883c9b3dcb5103)(index, 4, "big")
    ]));
    return parentPk.add((0, $f81fe8e548a259fc$export$54579cb87d860a47).generateG1().multiply((0, $b7fd6731762bdca0$export$8f54525b330fd87b).fromBytes(hash).value));
}
function $6263a241ee4922bd$export$5bdc4123f9cc0693(parentPk, index) {
    const hash = (0, $20b42468fafd22ce$export$699b481075cb9e0d)(Uint8Array.from([
        ...parentPk.toBytes(),
        ...(0, $11b8831ba7e63616$export$7f883c9b3dcb5103)(index, 4, "big")
    ]));
    return parentPk.add((0, $f81fe8e548a259fc$export$54579cb87d860a47).generateG2().multiply((0, $b7fd6731762bdca0$export$8f54525b330fd87b).fromBytes(hash).value));
}


var $5758ad345f58e7ac$exports = {};

$parcel$export($5758ad345f58e7ac$exports, "blockSize", () => $5758ad345f58e7ac$export$446963a0ea44fb9d);
$parcel$export($5758ad345f58e7ac$exports, "extract", () => $5758ad345f58e7ac$export$f9380c9a627682d3);
$parcel$export($5758ad345f58e7ac$exports, "expand", () => $5758ad345f58e7ac$export$9f77e0932fb78f72);
$parcel$export($5758ad345f58e7ac$exports, "extractExpand", () => $5758ad345f58e7ac$export$c0375ac2990d2f65);


const $5758ad345f58e7ac$export$446963a0ea44fb9d = 32;
function $5758ad345f58e7ac$export$f9380c9a627682d3(salt, ikm) {
    const hash = new (0, ($parcel$interopDefault($fpZC2$jssha)))("SHA-256", "UINT8ARRAY", {
        hmacKey: {
            format: "UINT8ARRAY",
            value: salt
        }
    });
    hash.update(ikm);
    return hash.getHash("UINT8ARRAY");
}
function $5758ad345f58e7ac$export$9f77e0932fb78f72(length, prk, info) {
    const blocks = Math.ceil(length / $5758ad345f58e7ac$export$446963a0ea44fb9d);
    let bytesWritten = 0;
    const okm = [];
    let temp = Uint8Array.from([]);
    for(let i = 1; i <= blocks; i++){
        temp = $5758ad345f58e7ac$export$f9380c9a627682d3(prk, Uint8Array.from(i === 1 ? [
            ...info,
            1
        ] : [
            ...temp,
            ...info,
            i
        ]));
        let toWrite = length - bytesWritten;
        if (toWrite > $5758ad345f58e7ac$export$446963a0ea44fb9d) toWrite = $5758ad345f58e7ac$export$446963a0ea44fb9d;
        okm.push(...temp.slice(0, toWrite));
        bytesWritten += toWrite;
    }
    (0, $8d5e30fd5fa02b49$export$a7a9523472993e97)(bytesWritten === length);
    return Uint8Array.from(okm);
}
function $5758ad345f58e7ac$export$c0375ac2990d2f65(length, key, salt, info) {
    return $5758ad345f58e7ac$export$9f77e0932fb78f72(length, $5758ad345f58e7ac$export$f9380c9a627682d3(salt, key), info);
}


var $20b42468fafd22ce$exports = {};

$parcel$export($20b42468fafd22ce$exports, "hmacBlockSize", () => $20b42468fafd22ce$export$94a325ed6d836b5e);
$parcel$export($20b42468fafd22ce$exports, "hash256", () => $20b42468fafd22ce$export$699b481075cb9e0d);
$parcel$export($20b42468fafd22ce$exports, "hash512", () => $20b42468fafd22ce$export$cc147b8bd27974ac);
$parcel$export($20b42468fafd22ce$exports, "hmac256", () => $20b42468fafd22ce$export$e10eb67e19628714);

const $20b42468fafd22ce$export$94a325ed6d836b5e = 64;
function $20b42468fafd22ce$export$699b481075cb9e0d(message) {
    const hash = new (0, ($parcel$interopDefault($fpZC2$jssha)))("SHA-256", "UINT8ARRAY");
    hash.update(message);
    return hash.getHash("UINT8ARRAY");
}
function $20b42468fafd22ce$export$cc147b8bd27974ac(message) {
    return Uint8Array.from([
        ...$20b42468fafd22ce$export$699b481075cb9e0d(Uint8Array.from([
            ...message,
            0
        ])),
        ...$20b42468fafd22ce$export$699b481075cb9e0d(Uint8Array.from([
            ...message,
            1
        ]))
    ]);
}
function $20b42468fafd22ce$export$e10eb67e19628714(message, k) {
    if (k.length > $20b42468fafd22ce$export$94a325ed6d836b5e) k = $20b42468fafd22ce$export$699b481075cb9e0d(k);
    while(k.length < $20b42468fafd22ce$export$94a325ed6d836b5e)k = Uint8Array.from([
        ...k,
        0
    ]);
    const kopad = [];
    for(let i = 0; i < $20b42468fafd22ce$export$94a325ed6d836b5e; i++)kopad.push(k[i] ^ 0x5c);
    const kipad = [];
    for(let i = 0; i < $20b42468fafd22ce$export$94a325ed6d836b5e; i++)kipad.push(k[i] ^ 0x36);
    return $20b42468fafd22ce$export$699b481075cb9e0d(Uint8Array.from([
        ...kopad,
        ...$20b42468fafd22ce$export$699b481075cb9e0d(Uint8Array.from([
            ...kipad,
            ...message
        ]))
    ]));
}


var $013cd1e91a5ae572$exports = {};

$parcel$export($013cd1e91a5ae572$exports, "modPow", () => $013cd1e91a5ae572$export$9747a4fa913461f);
$parcel$export($013cd1e91a5ae572$exports, "mod", () => $013cd1e91a5ae572$export$842a2cf37af977e1);
$parcel$export($013cd1e91a5ae572$exports, "modNumber", () => $013cd1e91a5ae572$export$64b58c5b0372ae95);
function $013cd1e91a5ae572$export$9747a4fa913461f(base, exponent, modulo) {
    if (exponent < 1n) return 1n;
    else if (base < 0n || base > modulo) base = $013cd1e91a5ae572$export$842a2cf37af977e1(base, modulo);
    let result = 1n;
    while(exponent > 0n){
        if ((exponent & 1n) > 0n) result = $013cd1e91a5ae572$export$842a2cf37af977e1(result * base, modulo);
        exponent >>= 1n;
        base = $013cd1e91a5ae572$export$842a2cf37af977e1(base * base, modulo);
    }
    return result;
}
function $013cd1e91a5ae572$export$842a2cf37af977e1(value, modulus) {
    return (value % modulus + modulus) % modulus;
}
function $013cd1e91a5ae572$export$64b58c5b0372ae95(value, modulus) {
    return (value % modulus + modulus) % modulus;
}


var $8c194b1bdb7378af$exports = {};

$parcel$export($8c194b1bdb7378af$exports, "sgn0", () => $8c194b1bdb7378af$export$457bc114f3b6be45);
$parcel$export($8c194b1bdb7378af$exports, "osswu2Help", () => $8c194b1bdb7378af$export$dfee9190546f1d4a);
$parcel$export($8c194b1bdb7378af$exports, "iso3", () => $8c194b1bdb7378af$export$e784642ec1e5cf56);
$parcel$export($8c194b1bdb7378af$exports, "optSwu2Map", () => $8c194b1bdb7378af$export$ee5c28ad16e024d8);
$parcel$export($8c194b1bdb7378af$exports, "g2Map", () => $8c194b1bdb7378af$export$74473883de6345ad);

function $8c194b1bdb7378af$export$457bc114f3b6be45(x) {
    const sign0 = (0, $013cd1e91a5ae572$export$842a2cf37af977e1)(x.elements[0].value, 2n) === 1n;
    const zero0 = x.elements[0].value === 0n;
    const sign1 = (0, $013cd1e91a5ae572$export$842a2cf37af977e1)(x.elements[1].value, 2n) === 1n;
    return sign0 || zero0 && sign1 ? 1n : 0n;
}
function $8c194b1bdb7378af$export$dfee9190546f1d4a(t) {
    const numDenCommon = (0, $7114a315a435248d$export$8d1968de8a0388cb).pow(2n).multiply(t.pow(4n)).add((0, $7114a315a435248d$export$8d1968de8a0388cb).multiply(t.pow(2n)));
    const x0_num = (0, $7114a315a435248d$export$a49b3bf2a8f9ece3).multiply(numDenCommon.add(new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), 1n)));
    let x0_den = (0, $7114a315a435248d$export$cb23cd3dd580e72c).negate().multiply(numDenCommon);
    x0_den = x0_den.equals(0n) ? (0, $7114a315a435248d$export$cb23cd3dd580e72c).multiply((0, $7114a315a435248d$export$8d1968de8a0388cb)) : x0_den;
    const gx0_den = x0_den.pow(3n);
    const gx0_num = (0, $7114a315a435248d$export$a49b3bf2a8f9ece3).multiply(gx0_den).add((0, $7114a315a435248d$export$cb23cd3dd580e72c).multiply(x0_num).multiply(x0_den.pow(2n))).add(x0_num.pow(3n));
    let temp1 = gx0_den.pow(7n);
    const temp2 = gx0_num.multiply(temp1);
    temp1 = temp1.multiply(temp2).multiply(gx0_den);
    let sqrtCandidate = temp2.multiply(temp1.pow(((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162) ** 2n - 9n) / 16n));
    for (const root of (0, $45c5a0c79e0736cc$export$5e60bb11dae8e64b)){
        let y0 = sqrtCandidate.multiply(root);
        if (y0.pow(2n).multiply(gx0_den).equals(gx0_num)) {
            if ($8c194b1bdb7378af$export$457bc114f3b6be45(y0) !== $8c194b1bdb7378af$export$457bc114f3b6be45(t)) y0 = y0.negate();
            (0, $8d5e30fd5fa02b49$export$a7a9523472993e97)($8c194b1bdb7378af$export$457bc114f3b6be45(y0) === $8c194b1bdb7378af$export$457bc114f3b6be45(t));
            return new (0, $f81fe8e548a259fc$export$54579cb87d860a47)(x0_num.multiply(x0_den), y0.multiply(x0_den.pow(3n)), x0_den, false, (0, $00e9cfcde39d0b4a$export$89bff894721071da));
        }
    }
    const x1_num = (0, $7114a315a435248d$export$8d1968de8a0388cb).multiply(t.pow(2n)).multiply(x0_num);
    const x1_den = x0_den;
    const gx1_num = (0, $7114a315a435248d$export$8d1968de8a0388cb).pow(3n).multiply(t.pow(6n)).multiply(gx0_num);
    const gx1_den = gx0_den;
    sqrtCandidate = sqrtCandidate.multiply(t.pow(3n));
    for (const eta of (0, $7114a315a435248d$export$dfed87f2d11110f4)){
        let y1 = eta.multiply(sqrtCandidate);
        if (y1.pow(2n).multiply(gx1_den).equals(gx1_num)) {
            if ($8c194b1bdb7378af$export$457bc114f3b6be45(y1) !== $8c194b1bdb7378af$export$457bc114f3b6be45(t)) y1 = y1.negate();
            (0, $8d5e30fd5fa02b49$export$a7a9523472993e97)($8c194b1bdb7378af$export$457bc114f3b6be45(y1) === $8c194b1bdb7378af$export$457bc114f3b6be45(t));
            return new (0, $f81fe8e548a259fc$export$54579cb87d860a47)(x1_num.multiply(x1_den), y1.multiply(x1_den.pow(3n)), x1_den, false, (0, $00e9cfcde39d0b4a$export$89bff894721071da));
        }
    }
    throw new Error("Bad osswu2Help.");
}
function $8c194b1bdb7378af$export$e784642ec1e5cf56(P) {
    return (0, $27314bc03f74868b$export$27808dd10edd4c0f)(P, [
        (0, $8856e63c79a7a18e$export$4c6c1dafe316d2c),
        (0, $8856e63c79a7a18e$export$732ae2b2551ff413),
        (0, $8856e63c79a7a18e$export$ea2765eb3fc09cbc),
        (0, $8856e63c79a7a18e$export$54826405639b5799)
    ], (0, $00e9cfcde39d0b4a$export$89bff894721071da));
}
function $8c194b1bdb7378af$export$ee5c28ad16e024d8(t, t2) {
    let Pp = $8c194b1bdb7378af$export$e784642ec1e5cf56($8c194b1bdb7378af$export$dfee9190546f1d4a(t));
    if (t2) {
        const Pp2 = $8c194b1bdb7378af$export$e784642ec1e5cf56($8c194b1bdb7378af$export$dfee9190546f1d4a(t2));
        Pp = Pp.add(Pp2);
    }
    return Pp.multiply((0, $00e9cfcde39d0b4a$export$41b7b4fef7f76fa9));
}
function $8c194b1bdb7378af$export$74473883de6345ad(alpha, dst) {
    const elements = (0, $ee571e8a973337ec$export$55a2cd7ad104d927)(alpha, 2, dst).map((hh)=>{
        const items = hh.map((value)=>new (0, $61122e18a0bc5a58$export$312db8bf004879ae)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), value));
        return new (0, $ee4c81c840b9d78d$export$3250f1bd1b840331)((0, $00e9cfcde39d0b4a$export$9e5f44173e64f162), items[0], items[1]);
    });
    return $8c194b1bdb7378af$export$ee5c28ad16e024d8(elements[0], elements[1]);
}


var $18de921ac0e3bf52$exports = {};

$parcel$export($18de921ac0e3bf52$exports, "doubleLineEval", () => $18de921ac0e3bf52$export$c11f3970c3ad259);
$parcel$export($18de921ac0e3bf52$exports, "addLineEval", () => $18de921ac0e3bf52$export$bd894c1853ea7ce9);
$parcel$export($18de921ac0e3bf52$exports, "millerLoop", () => $18de921ac0e3bf52$export$d2495f48e21d1b97);
$parcel$export($18de921ac0e3bf52$exports, "finalExponentiation", () => $18de921ac0e3bf52$export$d2180c627b521e81);
$parcel$export($18de921ac0e3bf52$exports, "atePairing", () => $18de921ac0e3bf52$export$740729f8e739fd84);
$parcel$export($18de921ac0e3bf52$exports, "atePairingMulti", () => $18de921ac0e3bf52$export$18b00e9902a9edab);

function $18de921ac0e3bf52$export$c11f3970c3ad259(R, P, ec = (0, $00e9cfcde39d0b4a$export$df72980aaa0ca402)) {
    const R12 = R.untwist();
    const slope = new (0, $61122e18a0bc5a58$export$312db8bf004879ae)(ec.q, 3n).multiply(R12.x.pow(2n).add(ec.a)).divide(R12.y.multiply(new (0, $61122e18a0bc5a58$export$312db8bf004879ae)(ec.q, 2n)));
    const v = R12.y.subtract(R12.x.multiply(slope));
    return P.y.subtract(P.x.multiply(slope)).subtract(v);
}
function $18de921ac0e3bf52$export$bd894c1853ea7ce9(R, Q, P) {
    const R12 = R.untwist();
    const Q12 = Q.untwist();
    if (R12.equals(Q12.negate())) return P.x.subtract(R12.x);
    const slope = Q12.y.subtract(R12.y).divide(Q12.x.subtract(R12.x));
    const v = Q12.y.multiply(R12.x).subtract(R12.y.multiply(Q12.x)).divide(R12.x.subtract(Q12.x));
    return P.y.subtract(P.x.multiply(slope)).subtract(v);
}
function $18de921ac0e3bf52$export$d2495f48e21d1b97(T, P, Q, ec = (0, $00e9cfcde39d0b4a$export$df72980aaa0ca402)) {
    const T_bits = (0, $11b8831ba7e63616$export$59537329b9c511e9)(T);
    let R = Q;
    let f = (0, $e01fe8766586be5e$export$d12e5c25403eca16).nil.one(ec.q);
    for(let i = 1; i < T_bits.length; i++){
        const lrr = $18de921ac0e3bf52$export$c11f3970c3ad259(R, P, ec);
        f = f.multiply(f).multiply(lrr);
        R = R.multiply(new (0, $61122e18a0bc5a58$export$312db8bf004879ae)(ec.q, 2n));
        if (T_bits[i] === 1) {
            const lrq = $18de921ac0e3bf52$export$bd894c1853ea7ce9(R, Q, P);
            f = f.multiply(lrq);
            R = R.add(Q);
        }
    }
    return f;
}
function $18de921ac0e3bf52$export$d2180c627b521e81(element, ec = (0, $00e9cfcde39d0b4a$export$df72980aaa0ca402)) {
    if (ec.k === 12n) {
        let ans = element.pow((ec.q ** 4n - ec.q ** 2n + 1n) / ec.n);
        ans = ans.qiPower(2).multiply(ans);
        ans = ans.qiPower(6).divide(ans);
        return ans;
    } else return element.pow((ec.q ** ec.k - 1n) / ec.n);
}
function $18de921ac0e3bf52$export$740729f8e739fd84(P, Q, ec = (0, $00e9cfcde39d0b4a$export$df72980aaa0ca402)) {
    const t = (0, $00e9cfcde39d0b4a$export$df72980aaa0ca402).x + 1n;
    let T = t - 1n;
    T = T < 0n ? -T : T;
    return $18de921ac0e3bf52$export$d2180c627b521e81($18de921ac0e3bf52$export$d2495f48e21d1b97(T, P.toAffine(), Q.toAffine()), ec);
}
function $18de921ac0e3bf52$export$18b00e9902a9edab(Ps, Qs, ec = (0, $00e9cfcde39d0b4a$export$df72980aaa0ca402)) {
    const t = (0, $00e9cfcde39d0b4a$export$df72980aaa0ca402).x + 1n;
    let T = t - 1n;
    T = T < 0n ? -T : T;
    let prod = (0, $e01fe8766586be5e$export$d12e5c25403eca16).nil.one(ec.q);
    for(let i = 0; i < Qs.length; i++)prod = prod.multiply($18de921ac0e3bf52$export$d2495f48e21d1b97(T, Ps[i].toAffine(), Qs[i].toAffine(), ec));
    return $18de921ac0e3bf52$export$d2180c627b521e81(prod, ec);
}


var $e66c6c730aa32243$exports = {};

$parcel$export($e66c6c730aa32243$exports, "coreSignMpl", () => $e66c6c730aa32243$export$d36c55300691c9bd);
$parcel$export($e66c6c730aa32243$exports, "coreVerifyMpl", () => $e66c6c730aa32243$export$fa86e59803ac4685);
$parcel$export($e66c6c730aa32243$exports, "coreAggregateMpl", () => $e66c6c730aa32243$export$58639efa77ac2d9c);
$parcel$export($e66c6c730aa32243$exports, "coreAggregateVerify", () => $e66c6c730aa32243$export$6d85de9d133db9bf);

function $e66c6c730aa32243$export$d36c55300691c9bd(sk, message, dst) {
    return (0, $8c194b1bdb7378af$export$74473883de6345ad)(message, dst).multiply(sk.value);
}
function $e66c6c730aa32243$export$fa86e59803ac4685(pk, message, signature, dst) {
    if (!signature.isValid() || !pk.isValid()) return false;
    const q = (0, $8c194b1bdb7378af$export$74473883de6345ad)(message, dst);
    const one = (0, $e01fe8766586be5e$export$d12e5c25403eca16).nil.one((0, $00e9cfcde39d0b4a$export$df72980aaa0ca402).q);
    const pairingResult = (0, $18de921ac0e3bf52$export$18b00e9902a9edab)([
        pk,
        (0, $f81fe8e548a259fc$export$54579cb87d860a47).generateG1().negate()
    ], [
        q,
        signature
    ]);
    return pairingResult.equals(one);
}
function $e66c6c730aa32243$export$58639efa77ac2d9c(signatures) {
    if (!signatures.length) throw new Error("Must aggregate at least 1 signature.");
    let aggregate = signatures[0];
    (0, $8d5e30fd5fa02b49$export$a7a9523472993e97)(aggregate.isValid());
    for (const signature of signatures.slice(1)){
        (0, $8d5e30fd5fa02b49$export$a7a9523472993e97)(signature.isValid());
        aggregate = aggregate.add(signature);
    }
    return aggregate;
}
function $e66c6c730aa32243$export$6d85de9d133db9bf(pks, ms, signature, dst) {
    if (pks.length !== ms.length || !pks.length) return false;
    if (!signature.isValid()) return false;
    const qs = [
        signature
    ];
    const ps = [
        (0, $f81fe8e548a259fc$export$54579cb87d860a47).generateG1().negate()
    ];
    for(let i = 0; i < pks.length; i++){
        if (!pks[i].isValid()) return false;
        qs.push((0, $8c194b1bdb7378af$export$74473883de6345ad)(ms[i], dst));
        ps.push(pks[i]);
    }
    return (0, $e01fe8766586be5e$export$d12e5c25403eca16).nil.one((0, $00e9cfcde39d0b4a$export$df72980aaa0ca402).q).equals((0, $18de921ac0e3bf52$export$18b00e9902a9edab)(ps, qs));
}


$parcel$exportWildcard($dedcfd393dea00ca$exports, $6c617017d170275f$exports);
$parcel$exportWildcard($dedcfd393dea00ca$exports, $dde8a229c2cb8a5c$exports);
$parcel$exportWildcard($dedcfd393dea00ca$exports, $61122e18a0bc5a58$exports);
$parcel$exportWildcard($dedcfd393dea00ca$exports, $ee4c81c840b9d78d$exports);
$parcel$exportWildcard($dedcfd393dea00ca$exports, $f9eca204c73b879f$exports);
$parcel$exportWildcard($dedcfd393dea00ca$exports, $e01fe8766586be5e$exports);
$parcel$exportWildcard($dedcfd393dea00ca$exports, $00e9cfcde39d0b4a$exports);
$parcel$exportWildcard($dedcfd393dea00ca$exports, $3dc2627f1a74b978$exports);
$parcel$exportWildcard($dedcfd393dea00ca$exports, $1d6ac6ce37d39979$exports);
$parcel$exportWildcard($dedcfd393dea00ca$exports, $8856e63c79a7a18e$exports);
$parcel$exportWildcard($dedcfd393dea00ca$exports, $7114a315a435248d$exports);
$parcel$exportWildcard($dedcfd393dea00ca$exports, $45c5a0c79e0736cc$exports);
$parcel$exportWildcard($dedcfd393dea00ca$exports, $5f5e7634db6ec17d$exports);
$parcel$exportWildcard($dedcfd393dea00ca$exports, $4508fd1f2dfd87e3$exports);
$parcel$exportWildcard($dedcfd393dea00ca$exports, $6855b0e4fef0dbbe$exports);
$parcel$exportWildcard($dedcfd393dea00ca$exports, $f81fe8e548a259fc$exports);
$parcel$exportWildcard($dedcfd393dea00ca$exports, $652b9d23a743e8c2$exports);
$parcel$exportWildcard($dedcfd393dea00ca$exports, $8d5e30fd5fa02b49$exports);
$parcel$exportWildcard($dedcfd393dea00ca$exports, $d8b9abe285040e16$exports);
$parcel$exportWildcard($dedcfd393dea00ca$exports, $b7fd6731762bdca0$exports);
$parcel$exportWildcard($dedcfd393dea00ca$exports, $46e980308398850e$exports);
$parcel$exportWildcard($dedcfd393dea00ca$exports, $cbd8901008cf0b7e$exports);
$parcel$exportWildcard($dedcfd393dea00ca$exports, $c20e836927ce4374$exports);
$parcel$exportWildcard($dedcfd393dea00ca$exports, $11b8831ba7e63616$exports);
$parcel$exportWildcard($dedcfd393dea00ca$exports, $27314bc03f74868b$exports);
$parcel$exportWildcard($dedcfd393dea00ca$exports, $ee571e8a973337ec$exports);
$parcel$exportWildcard($dedcfd393dea00ca$exports, $6263a241ee4922bd$exports);
$parcel$exportWildcard($dedcfd393dea00ca$exports, $5758ad345f58e7ac$exports);
$parcel$exportWildcard($dedcfd393dea00ca$exports, $20b42468fafd22ce$exports);
$parcel$exportWildcard($dedcfd393dea00ca$exports, $013cd1e91a5ae572$exports);
$parcel$exportWildcard($dedcfd393dea00ca$exports, $8c194b1bdb7378af$exports);
$parcel$exportWildcard($dedcfd393dea00ca$exports, $18de921ac0e3bf52$exports);
$parcel$exportWildcard($dedcfd393dea00ca$exports, $e66c6c730aa32243$exports);


$parcel$exportWildcard(module.exports, $dedcfd393dea00ca$exports);


//# sourceMappingURL=index.js.map
